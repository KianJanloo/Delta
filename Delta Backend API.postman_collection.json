{
	"info": {
		"_postman_id": "9bda0607-411d-4fa3-9f0a-799344510a56",
		"name": "Delta Backend API",
		"description": "API documentation for Delta Backend Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44620554"
	},
	"item": [
		{
			"name": "Level 1 - Most Important APIs",
			"item": [
				{
					"name": "auth",
					"item": [
						{
							"name": "login",
							"item": [
								{
									"name": "Login user",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login"
											]
										},
										"description": "Authenticate user and return access token"
									},
									"response": [
										{
											"name": "Login successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"accessToken\": \"<string>\",\n  \"refreshToken\": \"<string>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"role\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Invalid credentials",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "refresh",
							"item": [
								{
									"name": "Refresh access token",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"refresh"
											]
										},
										"description": "Get new access token using refresh token"
									},
									"response": [
										{
											"name": "Token refreshed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"refresh"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"accessToken\": \"<string>\"\n}"
										},
										{
											"name": "Invalid refresh token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"refresh"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "logout",
							"item": [
								{
									"name": "Logout user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"logout"
											]
										},
										"description": "Invalidate refresh token and logout user"
									},
									"response": [
										{
											"name": "Logout successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/auth/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"logout"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/auth/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"logout"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "forget password",
							"item": [
								{
									"name": "Step 1",
									"item": [
										{
											"name": "Send request ( email )",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"<email>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/forgot-password/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"forgot-password",
														"request"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Step 2",
									"item": [
										{
											"name": "Verify the request ( code )",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"<email>\",\r\n    \"resetCode\": \"<code>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/auth/forgot-password/verify",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"auth",
														"forgot-password",
														"verify"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Step 3",
									"item": [
										{
											"name": "Reset password",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"<email>\",\r\n    \"resetCode\": \"<code>\",\r\n    \"newPassword\": \"<string>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/forgot-password/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"forgot-password",
														"reset"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "register",
							"item": [
								{
									"name": "start registeration ( 1 )",
									"item": [
										{
											"name": "Start user registration process",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register"
													]
												},
												"description": "Step 1 of registration - Send verification code to email"
											},
											"response": [
												{
													"name": "Verification code sent successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"register"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"tempUserId\": \"<integer>\"\n}"
												},
												{
													"name": "Invalid input or email already registered",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"register"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"register"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "verify-email ( 2 )",
									"item": [
										{
											"name": "Verify email with code",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tempUserId\": \"<integer>\",\n  \"verificationCode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/verify-email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"verify-email"
													]
												},
												"description": "Step 2 of registration - Verify email using the code sent"
											},
											"response": [
												{
													"name": "Email verified successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tempUserId\": \"<integer>\",\n  \"verificationCode\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/verify-email",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"verify-email"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"userId\": \"<integer>\"\n}"
												},
												{
													"name": "Invalid verification code or code expired",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tempUserId\": \"<integer>\",\n  \"verificationCode\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/verify-email",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"verify-email"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tempUserId\": \"<integer>\",\n  \"verificationCode\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/verify-email",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"verify-email"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "complete-registration ( 3 )",
									"item": [
										{
											"name": "Complete user registration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/complete-registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"complete-registration"
													]
												},
												"description": "Step 3 of registration - Set password and phone number"
											},
											"response": [
												{
													"name": "Registration completed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userId\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/complete-registration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"complete-registration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Invalid input or email not verified",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userId\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/complete-registration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"complete-registration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userId\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/complete-registration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"complete-registration"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "bookings",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a booking by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Booking ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Booking details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Booking not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an existing booking",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<date>\",\n    \"<date>\"\n  ],\n  \"traveler_details\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    }\n  ],\n  \"status\": \"canceled\",\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Booking ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Booking updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<date>\",\n    \"<date>\"\n  ],\n  \"traveler_details\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    }\n  ],\n  \"status\": \"canceled\",\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Booking not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<date>\",\n    \"<date>\"\n  ],\n  \"traveler_details\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    }\n  ],\n  \"status\": \"canceled\",\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a booking",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Booking ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Booking deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Booking not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "continue",
									"item": [
										{
											"name": "Continue a canceled booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id/continue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id",
														"continue"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Booking ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Booking continued successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/continue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"continue"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"booking\": {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  }\n}"
												},
												{
													"name": "Only canceled bookings can be continued",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/continue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"continue"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Booking not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/continue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"continue"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Cancel a pending booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Booking ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Booking canceled successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"booking\": {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  }\n}"
												},
												{
													"name": "Only pending bookings can be canceled",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Booking not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get customers booking by user ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/bookings/:id/customers?page=1&limit=10&sort=created_at&order=DESC&houseId=<intiger>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings",
												":id",
												"customers"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Limit number for pagination"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Sort by options in the list"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Set order ( ASC or DESC )"
												},
												{
													"key": "houseId",
													"value": "<intiger>",
													"description": "Filter house ID ( must be a valid house ID )"
												},
												{
													"key": "status",
													"value": "<string>",
													"description": "Determine status that include ( pending _ canceled _ confirmed )"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get customers booking by user ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id/customers?page=1&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id",
														"customers"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Get all bookings with filtering, pagination, and sorting",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/bookings?page=1&limit=10&sort=created_at&order=DESC&house_id=<integer>&status=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"bookings"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page (max 100)"
										},
										{
											"key": "sort",
											"value": "created_at",
											"description": "Field to sort by (created_at, updated_at, check_in_date, or check_out_date)"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "Sort order (ASC for ascending, DESC for descending)"
										},
										{
											"key": "house_id",
											"value": "<integer>",
											"description": "Filter by house ID (must be a valid house ID)"
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Filter by status ( must include pending, canceled, confirmed )"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of bookings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/bookings?page=1&limit=10&sort=created_at&order=DESC&house_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page (max 100)"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Field to sort by (created_at, updated_at, check_in_date, or check_out_date)"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort order (ASC for ascending, DESC for descending)"
												},
												{
													"key": "house_id",
													"value": "<integer>",
													"description": "Filter by house ID (must be a valid house ID)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create a new booking",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<date>\",\n    \"<date>\"\n  ],\n  \"traveler_details\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    }\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"bookings"
									]
								}
							},
							"response": [
								{
									"name": "Booking created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<date>\",\n    \"<date>\"\n  ],\n  \"traveler_details\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    }\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/bookings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Invalid request body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<date>\",\n    \"<date>\"\n  ],\n  \"traveler_details\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"birthDate\": \"<date>\",\n      \"nationalId\": \"<string>\"\n    }\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/bookings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"bookings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "contact-us",
					"item": [
						{
							"name": "Create a new contact message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"message\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/contact-us",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contact-us"
									]
								}
							},
							"response": [
								{
									"name": "Contact message created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/contact-us",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"contact-us"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/ContactUs not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "dashboard",
					"item": [
						{
							"name": "summary",
							"item": [
								{
									"name": "Get dashboard summary statistics",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/dashboard/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dashboard",
												"summary"
											]
										},
										"description": "Returns summary statistics including counts of houses, users, bookings, and average rating"
									},
									"response": [
										{
											"name": "Dashboard summary statistics",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/dashboard/summary",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"dashboard",
														"summary"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"houses\": \"<integer>\",\n  \"users\": \"<integer>\",\n  \"bookings\": \"<integer>\",\n  \"averageRating\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "market-trends",
							"item": [
								{
									"name": "Get market trends analytics",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/dashboard/market-trends",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dashboard",
												"market-trends"
											]
										},
										"description": "Returns analytics data for market trends, including monthly booking counts"
									},
									"response": [
										{
											"name": "Market trends data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/dashboard/market-trends",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"dashboard",
														"market-trends"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"month\": \"<string>\",\n    \"bookingCount\": \"<integer>\"\n  },\n  {\n    \"month\": \"<string>\",\n    \"bookingCount\": \"<integer>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "favorites",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove a house from user's favorites by favorite ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/favorites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"favorites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Favorite ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "House removed from favorites successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Invalid favorite ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User ID is required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Cannot delete another user's favorite",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Favorite not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "user",
							"item": [
								{
									"name": "Get all favorites for a user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/favorites/user?page=1&limit=10&sort=createdAt&order=DESC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"favorites",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "sort",
													"value": "createdAt",
													"description": "Field to sort by ( createdAt, updatedAt )"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort order by DESC, ASC"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of user's favorites with house details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/user/:user_id?page=1&limit=10&sort=<string>&order=ASC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														"user",
														":user_id"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "Page number for pagination"
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Number of items per page"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Field to sort by"
														},
														{
															"key": "order",
															"value": "ASC",
															"description": "Sort order"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Favorite not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Favorite not found in the OpenAPI spec\"\n  }\n]"
										},
										{
											"name": "User ID is required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/favorites/user/:user_id?page=1&limit=10&sort=<string>&order=ASC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"favorites",
														"user",
														":user_id"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "Page number for pagination"
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Number of items per page"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Field to sort by"
														},
														{
															"key": "order",
															"value": "ASC",
															"description": "Sort order"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Add a house to user's favorites",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/favorites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"favorites"
									]
								}
							},
							"response": [
								{
									"name": "House added to favorites successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/favorites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"favorites"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Favorite not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "House ID is required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/favorites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"favorites"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User ID is required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/favorites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"favorites"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "House is already in favorites",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/favorites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"favorites"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "houses",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "availability",
									"item": [
										{
											"name": "Check house availability",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/:id/availability?startDate=<date>&endDate=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														":id",
														"availability"
													],
													"query": [
														{
															"key": "startDate",
															"value": "<date>",
															"description": "(Required) Start date for availability check"
														},
														{
															"key": "endDate",
															"value": "<date>",
															"description": "(Required) End date for availability check"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) House ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "House availability status",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/houses/:id/availability?startDate=<date>&endDate=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"houses",
																":id",
																"availability"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "<date>",
																	"description": "(Required) Start date for availability check"
																},
																{
																	"key": "endDate",
																	"value": "<date>",
																	"description": "(Required) End date for availability check"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"available\": \"<boolean>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Invalid dates",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/houses/:id/availability?startDate=<date>&endDate=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"houses",
																":id",
																"availability"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "<date>",
																	"description": "(Required) Start date for availability check"
																},
																{
																	"key": "endDate",
																	"value": "<date>",
																	"description": "(Required) End date for availability check"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "House not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/houses/:id/availability?startDate=<date>&endDate=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"houses",
																":id",
																"availability"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "<date>",
																	"description": "(Required) Start date for availability check"
																},
																{
																	"key": "endDate",
																	"value": "<date>",
																	"description": "(Required) End date for availability check"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get a house by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/houses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) House ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "House details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Invalid house ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "House not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete house with seller role",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/houses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete house with seller role",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Update house with seller role",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"address\": \"<string>\",\r\n  \"rate\": \"<number>\",\r\n  \"price\": \"<number>\",\r\n  \"photos\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"tags\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"last_updated\": \"<ISO 8601 date string>\",\r\n  \"capacity\": \"<number>\",\r\n  \"location\": {\r\n    \"lat\": \"<number>\",\r\n    \"lng\": \"<number>\"\r\n  },\r\n  \"categories\": {\r\n    \"name\": \"<value>\"\r\n  },\r\n  \"bathrooms\": \"<number>\",\r\n  \"parking\": \"<number>\",\r\n  \"rooms\": \"<number>\",\r\n  \"yard_type\": \"<string>\",\r\n  \"num_comments\": \"<number>\",\r\n  \"transaction_type\": \"<\\\"rental\\\" | \\\"mortgage\\\" | \\\"reservation\\\" | \\\"direct_purchase\\\">\",\r\n  \"caption\": \"<string|null>\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/houses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Update house with seller role Copy",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"address\": \"<string>\",\r\n  \"rate\": \"<number>\",\r\n  \"price\": \"<number>\",\r\n  \"tags\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"last_updated\": \"<ISO 8601 date string>\", // e.g. \"2025-07-21T12:00:00.000Z\"\r\n  \"capacity\": \"<number>\",\r\n  \"location\": {\r\n    \"lat\": \"<number>\",\r\n    \"lng\": \"<number>\"\r\n  },\r\n  \"categories\": {\r\n    \"<key>\": \"<value>\"\r\n  },\r\n  \"bathrooms\": \"<number>\",\r\n  \"parking\": \"<number>\",\r\n  \"rooms\": \"<number>\",\r\n  \"yard_type\": \"<string>\",\r\n  \"num_comments\": \"<number>\",\r\n  \"transaction_type\": \"<\\\"rental\\\" | \\\"mortgage\\\" | \\\"reservation\\\" | \\\"direct_purchase\\\">\",\r\n  \"sellerId\": \"<number>\",\r\n  \"sellerName\": \"<string>\",\r\n  \"caption\": \"<string|null>\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "rating",
							"item": [
								{
									"name": "Get houses by rating",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/houses/rating?minRating=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												"rating"
											],
											"query": [
												{
													"key": "minRating",
													"value": "<number>",
													"description": "Minimum rating to filter by"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of houses filtered by rating",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/rating?minRating=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														"rating"
													],
													"query": [
														{
															"key": "minRating",
															"value": "<number>",
															"description": "Minimum rating to filter by"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "geo-search",
							"item": [
								{
									"name": "Search houses by geographical location",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/houses/geo-search?lat=<number>&lng=<number>&radius=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												"geo-search"
											],
											"query": [
												{
													"key": "lat",
													"value": "<number>",
													"description": "(Required) Latitude"
												},
												{
													"key": "lng",
													"value": "<number>",
													"description": "(Required) Longitude"
												},
												{
													"key": "radius",
													"value": "10",
													"description": "Search radius in kilometers"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of houses within the specified radius",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/geo-search?lat=<number>&lng=<number>&radius=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														"geo-search"
													],
													"query": [
														{
															"key": "lat",
															"value": "<number>",
															"description": "(Required) Latitude"
														},
														{
															"key": "lng",
															"value": "<number>",
															"description": "(Required) Longitude"
														},
														{
															"key": "radius",
															"value": "10",
															"description": "Search radius in kilometers"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  }\n]"
										},
										{
											"name": "Invalid coordinates",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/houses/geo-search?lat=<number>&lng=<number>&radius=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														"geo-search"
													],
													"query": [
														{
															"key": "lat",
															"value": "<number>",
															"description": "(Required) Latitude"
														},
														{
															"key": "lng",
															"value": "<number>",
															"description": "(Required) Longitude"
														},
														{
															"key": "radius",
															"value": "10",
															"description": "Search radius in kilometers"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "my-houses",
							"item": [
								{
									"name": "Get all houses by user id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/houses/seller/user?page=1&limit=10&sort=created_at&order=DESC&search=<string>&minPrice=<number>&maxPrice=<number>&transaction_type=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												"seller",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Limit of items per page"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "[ \"last_updated\" ,\"created_at\" ,\"price\", \"title\", ]"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort by ( ASC, DESC )"
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Search by \"title\" and \"caption\""
												},
												{
													"key": "minPrice",
													"value": "<number>",
													"description": "Minimum price filter (for direct purchase properties)"
												},
												{
													"key": "maxPrice",
													"value": "<number>",
													"description": "Maximum price filter (for direct purchase properties)"
												},
												{
													"key": "transaction_type",
													"value": "<string>",
													"description": "Filter by transaction type (rental, mortgage, reservation, or direct purchase)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get all houses by user id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/houses/62/user?page=1&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"houses",
														"62",
														"user"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"_postman_previewlanguage": "",
											"header": [],
											"cookie": [
												{
													"expires": "Invalid Date"
												}
											],
											"body": "{\r\n    \"houses\": [\r\n        {\r\n            \"id\": \"6\",\r\n            \"title\": \"هتل هما\",\r\n            \"address\": \"تهران, منطفه خوش آب و هوای ونک\",\r\n            \"photos\": [\r\n                \"https://images.unsplash.com/photo-1455587734955-081b22074882?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n                \"https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n                \"https://images.unsplash.com/photo-1618773928121-c32242e63f39?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"1200000\",\r\n            \"tags\": [\r\n                \"مدرن\",\r\n                \"هتل\"\r\n            ],\r\n            \"last_updated\": \"2025-06-21T08:43:34.876Z\",\r\n            \"capacity\": 2,\r\n            \"location\": {\r\n                \"lat\": 36.005131,\r\n                \"lng\": 52.8486547\r\n            },\r\n            \"categories\": {\r\n                \"id\": 3,\r\n                \"name\": \"هتل\"\r\n            },\r\n            \"bathrooms\": 1,\r\n            \"parking\": 1,\r\n            \"rooms\": 1,\r\n            \"yard_type\": \"شهری\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"reservation\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"هتل‌ هما تهران واقع در منطقه خوش آب و هوای ونک در سال ۱۳۵۲ افتتاح و آخرین بازسازی آن در تیر ماه سال ۱۳۹۷ صورت گرفت. این برج ۱۶ طبقه دارای ۱۷۷ باب اتاق و سوئیت مدرن و مجهز به تمامی امکانات رفاهی است که چشم اندازی منحصر به فرد از رشته کوه های البرز، باغ زیبای هتل و شهر تهران دارند. هتل لوکس هما یکی از بهترین هتل‌های پنج ستاره تهران و زیرمجموعه گروه هتل های هما محسوب می‌شود. هتل پنج ستاره هما تهران با موقعیت مکانی عالی خود، دسترسی به مراکز فرهنگی‌، ..\"\r\n        },\r\n        {\r\n            \"id\": \"7\",\r\n            \"title\": \"ویلای لوکس استخردار\",\r\n            \"address\": \"دوبی جزایر نخلی\",\r\n            \"photos\": [\r\n                \"https://images.unsplash.com/photo-1542314831-068cd1dbfeeb?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n                \"https://images.unsplash.com/photo-1584132967334-10e028bd69f7?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"6000000\",\r\n            \"tags\": [\r\n                \"مدرن\",\r\n                \"ویلا\"\r\n            ],\r\n            \"last_updated\": \"2025-06-28T12:47:32.878Z\",\r\n            \"capacity\": 2,\r\n            \"location\": {\r\n                \"lat\": 32,\r\n                \"lng\": 52\r\n            },\r\n            \"categories\": {\r\n                \"id\": 6,\r\n                \"name\": \"مدرن\"\r\n            },\r\n            \"bathrooms\": 10,\r\n            \"parking\": 3,\r\n            \"rooms\": 15,\r\n            \"yard_type\": \"حیاط دار بزرگ\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"direct_purchase\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"این خانه برای کسانی که میخواهند زندگی را در بالاترین و لوکس ترین سطح ممکن تجربه کنند بهترین انتخاب بشمار میرود.\"\r\n        },\r\n        {\r\n            \"id\": \"8\",\r\n            \"title\": \"ویلای شیک\",\r\n            \"address\": \"بخش، مرکزی، شهرستان، چالوس\",\r\n            \"photos\": [\r\n                \"https://images.unsplash.com/photo-1614713223639-819abc4a7645?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n                \"https://images.unsplash.com/photo-1542314831-068cd1dbfeeb?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n                \"https://images.unsplash.com/photo-1575517111478-7f6afd0973db?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"90000000\",\r\n            \"tags\": [\r\n                \"لوکس\",\r\n                \"مدرن\",\r\n                \"ویلا\"\r\n            ],\r\n            \"last_updated\": \"2025-06-29T01:04:38.313Z\",\r\n            \"capacity\": 30,\r\n            \"location\": {\r\n                \"lat\": 36.6506329,\r\n                \"lng\": 51.4223717\r\n            },\r\n            \"categories\": {\r\n                \"id\": \"4\",\r\n                \"name\": \"مسکونی\"\r\n            },\r\n            \"bathrooms\": 7,\r\n            \"parking\": 5,\r\n            \"rooms\": 9,\r\n            \"yard_type\": \"حیاط دار کوچک\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"direct_purchase\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"این ویلا گزینه‌ای ایده‌آل برای کسانی‌ست که به دنبال زندگی در محیطی آرام، لوکس و منحصربه‌فرد هستند. طراحی معماری آن ترکیبی از زیبایی، سادگی و مدرنیته است که حس آرامش و راحتی را القا می‌کند. قرارگیری ملک در یکی از خاص‌ترین مناطق دبی، تجربه‌ای متفاوت از سبک زندگی شهری و در عین حال دور از شلوغی را فراهم می‌کند. فضای اطراف ملک به‌گونه‌ای طراحی شده که حس صمیمیت و ارتباط با طبیعت حفظ شود. این خانه نه‌تنها محلی برای زندگی، بلکه نمادی از انتخابی هوشمندانه و شایسته برای سرمایه‌گذاری در آینده است. همچنین فرصت مناسبی‌ست برای کسانی که به‌دنبال تغییر سبک زندگی خود به سطحی بالاتر هستند.\"\r\n        },\r\n        {\r\n            \"id\": \"21\",\r\n            \"title\": \"هتل ساحلی\",\r\n            \"address\": \"بابل منطقه ساحلی\",\r\n            \"photos\": [\r\n                \"https://images.unsplash.com/photo-1566073771259-6a8506099945?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n                \"https://plus.unsplash.com/premium_photo-1678297269980-16f4be3a15a6?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"1200000\",\r\n            \"tags\": [\r\n                \"مدرن\",\r\n                \"هتل\"\r\n            ],\r\n            \"last_updated\": \"2025-06-30T05:06:20.208Z\",\r\n            \"capacity\": 2,\r\n            \"location\": {\r\n                \"lat\": 36.005131,\r\n                \"lng\": 52.8486547\r\n            },\r\n            \"categories\": {\r\n                \"id\": 3,\r\n                \"name\": \"هتل\"\r\n            },\r\n            \"bathrooms\": 1,\r\n            \"parking\": 1,\r\n            \"rooms\": 1,\r\n            \"yard_type\": \"ساحلی\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"reservation\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"خانه ساحلی در کنار سواحل زیبای خزر به شما این امکان رو میده که هروقت خواستین در سریعترین زمان ممکن برین دریا\"\r\n        },\r\n        {\r\n            \"id\": \"28\",\r\n            \"title\": \"ویلا \",\r\n            \"address\": \"سعادت آباد تهران\",\r\n            \"photos\": [\r\n                \"https://images.unsplash.com/photo-1618773928121-c32242e63f39?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8aG90ZWx8ZW58MHx8MHx8fDA%3D\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"1300000\",\r\n            \"tags\": [\r\n                \"قدیمی\"\r\n            ],\r\n            \"last_updated\": \"2025-06-30T12:33:28.412Z\",\r\n            \"capacity\": 6,\r\n            \"location\": {\r\n                \"lat\": 35.80536796297549,\r\n                \"lng\": 51.4348325556891\r\n            },\r\n            \"categories\": {\r\n                \"name\": \"5\"\r\n            },\r\n            \"bathrooms\": 2,\r\n            \"parking\": 2,\r\n            \"rooms\": 2,\r\n            \"yard_type\": \"شهری\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"direct_purchase\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"بهترین ویلای منطقه سعادت آباد حتما بخرید وگرنه ضرر کردید\"\r\n        },\r\n        {\r\n            \"id\": \"33\",\r\n            \"title\": \"جم ویلا\",\r\n            \"address\": \"تهران, مرکز شهر, زعفرانیه\",\r\n            \"photos\": [\r\n                \"https://usvintagewood.com/wp-content/uploads/2021/05/image1.jpg\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"150000000\",\r\n            \"tags\": [\r\n                \"ویلا\",\r\n                \"رزرو\"\r\n            ],\r\n            \"last_updated\": \"2025-07-01T11:01:09.740Z\",\r\n            \"capacity\": 12,\r\n            \"location\": {\r\n                \"lat\": 35.69243696765708,\r\n                \"lng\": 51.39510572113414\r\n            },\r\n            \"categories\": {\r\n                \"id\": 3,\r\n                \"name\": \"ویلا\"\r\n            },\r\n            \"bathrooms\": 3,\r\n            \"parking\": 2,\r\n            \"rooms\": 6,\r\n            \"yard_type\": \"استخر دار\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"reservation\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"جم ویلا\"\r\n        },\r\n        {\r\n            \"id\": \"36\",\r\n            \"title\": \"آپارتمان\",\r\n            \"address\": \"ساری, مرکز شهر\",\r\n            \"photos\": [\r\n                \"https://usvintagewood.com/wp-content/uploads/2021/05/image1.jpg\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"20000000\",\r\n            \"tags\": [\r\n                \"ویلا\",\r\n                \"آپارتمان\"\r\n            ],\r\n            \"last_updated\": \"2025-07-01T15:18:51.803Z\",\r\n            \"capacity\": 5,\r\n            \"location\": {\r\n                \"lat\": 35.705819838018655,\r\n                \"lng\": 51.38233952673561\r\n            },\r\n            \"categories\": {\r\n                \"id\": 16,\r\n                \"name\": \"مسک\"\r\n            },\r\n            \"bathrooms\": 6,\r\n            \"parking\": 3,\r\n            \"rooms\": 5,\r\n            \"yard_type\": \"استخر دار\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"reservation\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"آپارتمان\"\r\n        },\r\n        {\r\n            \"id\": \"37\",\r\n            \"title\": \"آپارتمان\",\r\n            \"address\": \"ساری, مرکز شهر\",\r\n            \"photos\": [\r\n                \"https://usvintagewood.com/wp-content/uploads/2021/05/image1.jpg\"\r\n            ],\r\n            \"rate\": null,\r\n            \"price\": \"20000000\",\r\n            \"tags\": [\r\n                \"ویلا\",\r\n                \"آپارتمان\"\r\n            ],\r\n            \"last_updated\": \"2025-07-01T15:18:52.480Z\",\r\n            \"capacity\": 5,\r\n            \"location\": {\r\n                \"lat\": 35.705819838018655,\r\n                \"lng\": 51.38233952673561\r\n            },\r\n            \"categories\": {\r\n                \"id\": 16,\r\n                \"name\": \"مسک\"\r\n            },\r\n            \"bathrooms\": 6,\r\n            \"parking\": 3,\r\n            \"rooms\": 5,\r\n            \"yard_type\": \"استخر دار\",\r\n            \"num_comments\": 0,\r\n            \"transaction_type\": \"reservation\",\r\n            \"sellerId\": \"62\",\r\n            \"sellerName\": \"Navidreza Abbaszadeh\",\r\n            \"caption\": \"آپارتمان\"\r\n        }\r\n    ],\r\n    \"totalCount\": 8\r\n}"
										}
									]
								}
							]
						},
						{
							"name": "create-house",
							"item": [
								{
									"name": "Create house with seller role ( step 1 )",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"address\": \"<string>\",\r\n  \"rate\": \"<number>\",\r\n  \"price\": \"<number>\",\r\n  \"tags\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"capacity\": \"<number>\",\r\n  \"location\": {\r\n    \"lat\": \"<number>\",\r\n    \"lng\": \"<number>\"\r\n  },\r\n  \"categories\": {\r\n    \"name\": \"<value>\"\r\n  },\r\n  \"bathrooms\": \"<number>\",\r\n  \"parking\": \"<number>\",\r\n  \"rooms\": \"<number>\",\r\n  \"yard_type\": \"<string>\",\r\n  \"transaction_type\": \"<\\\"rental\\\" | \\\"mortgage\\\" | \\\"reservation\\\" | \\\"direct_purchase\\\">\",\r\n  \"caption\": \"<string|null>\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/houses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses"
											]
										}
									},
									"response": [
										{
											"name": "Create house with seller role",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"address\": \"<string>\",\r\n  \"rate\": \"<number>\",\r\n  \"price\": \"<number>\",\r\n  \"tags\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"last_updated\": \"<ISO 8601 date string>\", // e.g. \"2025-07-21T12:00:00.000Z\"\r\n  \"capacity\": \"<number>\",\r\n  \"location\": {\r\n    \"lat\": \"<number>\",\r\n    \"lng\": \"<number>\"\r\n  },\r\n  \"categories\": {\r\n    \"<key>\": \"<value>\"\r\n  },\r\n  \"bathrooms\": \"<number>\",\r\n  \"parking\": \"<number>\",\r\n  \"rooms\": \"<number>\",\r\n  \"yard_type\": \"<string>\",\r\n  \"num_comments\": \"<number>\",\r\n  \"transaction_type\": \"<\\\"rental\\\" | \\\"mortgage\\\" | \\\"reservation\\\" | \\\"direct_purchase\\\">\",\r\n  \"sellerId\": \"<number>\",\r\n  \"sellerName\": \"<string>\",\r\n  \"caption\": \"<string|null>\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/houses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"houses"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Upload photos for house ( create house step 2 )",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "photos",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/houses/upload/photos/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses",
												"upload",
												"photos",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Upload photos for house ( create house step 2 )",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "photos",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseURL}}/houses/upload/photos/:id",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"houses",
														"upload",
														"photos",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Get all houses with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/houses?page=1&limit=10&transactionType=[rental, mortgage]&search=<string>&order=DESC&sort=last_updated&propertyType=villa&location=<string>&minPrice=<number>&maxPrice=<number>&minRent=<number>&maxRent=<number>&minMortgage=<number>&maxMortgage=<number>&minArea=<number>&maxArea=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"houses"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of houses"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "transactionType",
											"value": "[rental, mortgage]",
											"description": "Filter by transaction type (rental, mortgage, reservation, or direct purchase)"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Search in title and address fields"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "Sort order (ASC for ascending, DESC for descending)"
										},
										{
											"key": "sort",
											"value": "last_updated",
											"description": "Field to sort by (last_updated, price, area, or created_at)"
										},
										{
											"key": "propertyType",
											"value": "villa",
											"description": "Filter by property type (apartment, villa, house, land, or commercial)"
										},
										{
											"key": "location",
											"value": "<string>",
											"description": "Filter by location name or address"
										},
										{
											"key": "minPrice",
											"value": "<number>",
											"description": "Minimum price filter (for direct purchase properties)"
										},
										{
											"key": "maxPrice",
											"value": "<number>",
											"description": "Maximum price filter (for direct purchase properties)"
										},
										{
											"key": "minRent",
											"value": "<number>",
											"description": "Minimum rent amount filter (for rental properties)"
										},
										{
											"key": "maxRent",
											"value": "<number>",
											"description": "Maximum rent amount filter (for rental properties)"
										},
										{
											"key": "minMortgage",
											"value": "<number>",
											"description": "Minimum mortgage amount filter (for mortgage properties)"
										},
										{
											"key": "maxMortgage",
											"value": "<number>",
											"description": "Maximum mortgage amount filter (for mortgage properties)"
										},
										{
											"key": "minArea",
											"value": "<number>",
											"description": "Minimum area in square meters"
										},
										{
											"key": "maxArea",
											"value": "<number>",
											"description": "Maximum area in square meters"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of houses",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/houses?limit=10&transactionType=rental&search=<string>&order=DESC&sort=last_updated&propertyType=villa&location=<string>&maxPrice=<number>&minRent=<number>&maxRent=<number>&minMortgage=<number>&maxMortgage=<number>&minArea=<number>&maxArea=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"houses"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "transactionType",
													"value": "rental",
													"description": "Filter by transaction type (rental, mortgage, reservation, or direct purchase)"
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Search in title and address fields"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort order (ASC for ascending, DESC for descending)"
												},
												{
													"key": "sort",
													"value": "last_updated",
													"description": "Field to sort by (last_updated, price, area, or created_at)"
												},
												{
													"key": "propertyType",
													"value": "villa",
													"description": "Filter by property type (apartment, villa, house, land, or commercial)"
												},
												{
													"key": "location",
													"value": "<string>",
													"description": "Filter by location name or address"
												},
												{
													"key": "maxPrice",
													"value": "<number>",
													"description": "Maximum price filter (for direct purchase properties)"
												},
												{
													"key": "minRent",
													"value": "<number>",
													"description": "Minimum rent amount filter (for rental properties)"
												},
												{
													"key": "maxRent",
													"value": "<number>",
													"description": "Maximum rent amount filter (for rental properties)"
												},
												{
													"key": "minMortgage",
													"value": "<number>",
													"description": "Minimum mortgage amount filter (for mortgage properties)"
												},
												{
													"key": "maxMortgage",
													"value": "<number>",
													"description": "Maximum mortgage amount filter (for mortgage properties)"
												},
												{
													"key": "minArea",
													"value": "<number>",
													"description": "Minimum area in square meters"
												},
												{
													"key": "maxArea",
													"value": "<number>",
													"description": "Maximum area in square meters"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "locations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a location by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Location ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Location details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Location not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Create a new location",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations"
											]
										}
									},
									"response": [
										{
											"name": "Location created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Delete a location",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Location ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Location deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Location not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an existing location",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Location ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Location updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Location not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all locations with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/locations?page=1&limit=10&sort=<string>&order=ASC&area_name=<string>&lat=<number>&lng=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"locations"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Field to sort by"
										},
										{
											"key": "order",
											"value": "ASC",
											"description": "Sort order"
										},
										{
											"key": "area_name",
											"value": "<string>",
											"description": "Filter by area name"
										},
										{
											"key": "lat",
											"value": "<number>",
											"description": "Filter by latitude"
										},
										{
											"key": "lng",
											"value": "<number>",
											"description": "Filter by longitude"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of locations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/locations?page=1&limit=10&sort=<string>&order=ASC&area_name=<string>&lat=<number>&lng=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Field to sort by"
												},
												{
													"key": "order",
													"value": "ASC",
													"description": "Sort order"
												},
												{
													"key": "area_name",
													"value": "<string>",
													"description": "Filter by area name"
												},
												{
													"key": "lat",
													"value": "<number>",
													"description": "Filter by latitude"
												},
												{
													"key": "lng",
													"value": "<number>",
													"description": "Filter by longitude"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get payment details by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Payment ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Payment details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Payment not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Invalid payment ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Cannot access another user's payment",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Payment not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "verify",
									"item": [
										{
											"name": "Verify a payment",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id",
														"verify"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Payment ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Payment verified successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"payment\": {\n    \"value\": \"reference #/components/schemas/Payment not found in the OpenAPI spec\"\n  }\n}"
												},
												{
													"name": "Invalid payment ID or verification failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden - Cannot verify another user's payment",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Payment not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Create a new payment request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"<number>\",\n  \"description\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"bookingId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "Payment request created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<number>\",\n  \"description\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"bookingId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"paymentUrl\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
								},
								{
									"name": "Amount is required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<number>\",\n  \"description\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"bookingId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"payments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<number>\",\n  \"description\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"bookingId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"payments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Booking not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<number>\",\n  \"description\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"bookingId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"payments"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all payments by user ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/payments?status=<string>&page=1&limit=10&sort=createdAt&order=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"payments"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>",
											"description": "[\"createdAt\", \"updatedAt\", \"amount\", \"status\"]"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sort",
											"value": "createdAt",
											"description": "[\"amount\" | \"createdAt\"]"
										},
										{
											"key": "order",
											"value": "ASC",
											"description": "[\"ASC\" | \"DESC\"]"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get all payments by user ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/payments?status=<string>&page=1&limit=10&sort=createdAt&order=ASC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"payments"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>",
													"description": "[\"createdAt\", \"updatedAt\", \"amount\", \"status\"]"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "createdAt",
													"description": "[\"amount\" | \"createdAt\"]"
												},
												{
													"key": "order",
													"value": "ASC",
													"description": "[\"ASC\" | \"DESC\"]"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"payments\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"userId\": \"61\",\r\n            \"bookingId\": \"85\",\r\n            \"amount\": \"1000.00\",\r\n            \"description\": \"Hello\",\r\n            \"status\": \"completed\",\r\n            \"paymentUrl\": \"http://localhost:3000/mock-payment/1\",\r\n            \"transactionId\": null,\r\n            \"createdAt\": \"2025-07-20T12:01:19.470Z\",\r\n            \"updatedAt\": \"2025-07-20T12:01:52.786Z\"\r\n        }\r\n    ],\r\n    \"totalCount\": 1\r\n}"
								}
							]
						}
					]
				},
				{
					"name": "seller-upgrade",
					"item": [
						{
							"name": "upgrade-to-seller",
							"item": [
								{
									"name": "verify",
									"item": [
										{
											"name": "Verify the payment and upgrade user to seller",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trackingNumber\": \"<token>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/seller/upgrade-to-seller/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"seller",
														"upgrade-to-seller",
														"verify"
													]
												}
											},
											"response": [
												{
													"name": "User upgraded to seller successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"paymentId\": \"<integer>\",\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/seller-upgrade/upgrade-to-seller/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"seller-upgrade",
																"upgrade-to-seller",
																"verify"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Payment verification failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"paymentId\": \"<integer>\",\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/seller-upgrade/upgrade-to-seller/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"seller-upgrade",
																"upgrade-to-seller",
																"verify"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"paymentId\": \"<integer>\",\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/seller-upgrade/upgrade-to-seller/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"seller-upgrade",
																"upgrade-to-seller",
																"verify"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Initiate the seller upgrade process",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/seller/upgrade-to-seller",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"seller",
												"upgrade-to-seller"
											]
										}
									},
									"response": [
										{
											"name": "Upgrade payment initiated successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/seller-upgrade/upgrade-to-seller",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"seller-upgrade",
														"upgrade-to-seller"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"payment\": {\n    \"paymentUrl\": \"<string>\",\n    \"transactionId\": \"<string>\"\n  }\n}"
										},
										{
											"name": "User is already a seller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/seller-upgrade/upgrade-to-seller",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"seller-upgrade",
														"upgrade-to-seller"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/seller-upgrade/upgrade-to-seller",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"seller-upgrade",
														"upgrade-to-seller"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "profile",
									"item": [
										{
											"name": "Update a user's profile",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"phone\": \"<string>\",\n  \"address\": \"<string>\",\n  \"buyingHistory\": {},\n  \"sellingHistory\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Profile updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\",\n  \"phone\": \"<string>\",\n  \"address\": \"<string>\",\n  \"buyingHistory\": {},\n  \"sellingHistory\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/users/:id/profile",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"users",
																":id",
																"profile"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"role\": \"admin\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailVerified\": \"<boolean>\",\n    \"membershipDate\": \"<dateTime>\",\n    \"profilePicture\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
												},
												{
													"name": "Invalid input",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\",\n  \"phone\": \"<string>\",\n  \"address\": \"<string>\",\n  \"buyingHistory\": {},\n  \"sellingHistory\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/users/:id/profile",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"users",
																":id",
																"profile"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\",\n  \"phone\": \"<string>\",\n  \"address\": \"<string>\",\n  \"buyingHistory\": {},\n  \"sellingHistory\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/users/:id/profile",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"users",
																":id",
																"profile"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "public",
									"item": [
										{
											"name": "Get a public user profile",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id/public",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id",
														"public"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Public user profile",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/users/:id/public",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"users",
																":id",
																"public"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"role\": \"admin\",\n    \"profilePicture\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Invalid user ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/users/:id/public",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"users",
																":id",
																"public"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/users/:id/public",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"users",
																":id",
																"public"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get a user by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "User details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"role\": \"admin\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailVerified\": \"<boolean>\",\n    \"membershipDate\": \"<dateTime>\",\n    \"profilePicture\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "User updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"role\": \"buyer\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"profilePicture\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"role\": \"admin\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailVerified\": \"<boolean>\",\n    \"membershipDate\": \"<dateTime>\",\n    \"profilePicture\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"role\": \"buyer\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"profilePicture\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Upload profile picture",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "picture",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/upload/picture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"upload",
												"picture"
											]
										}
									},
									"response": [
										{
											"name": "New Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "picture",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseURL}}/users/upload-profile-picture/:userId",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"users",
														"upload-profile-picture",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "{security}",
							"item": [
								{
									"name": "Quick change password",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"currentPassword\": \"<string>\",\r\n    \"newPassword\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"change-password"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "{admin}",
							"item": [
								{
									"name": "Get all users with filtering, pagination, and sorting (Admin access)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users?page=1&limit=10&sort=<string>&order=ASC&role=buyer&membership_date=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Field to sort by"
												},
												{
													"key": "order",
													"value": "ASC",
													"description": "Sort order"
												},
												{
													"key": "role",
													"value": "buyer",
													"description": "Filter by user role"
												},
												{
													"key": "membership_date",
													"value": "<date>",
													"description": "Filter by membership date"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of users",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users?page=1&limit=10&sort=<string>&order=ASC&role=buyer&membership_date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "Page number for pagination"
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Number of items per page"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Field to sort by"
														},
														{
															"key": "order",
															"value": "ASC",
															"description": "Sort order"
														},
														{
															"key": "role",
															"value": "buyer",
															"description": "Filter by user role"
														},
														{
															"key": "membership_date",
															"value": "<date>",
															"description": "Filter by membership date"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"role\": \"seller\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailVerified\": \"<boolean>\",\n    \"membershipDate\": \"<dateTime>\",\n    \"profilePicture\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"role\": \"seller\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailVerified\": \"<boolean>\",\n    \"membershipDate\": \"<dateTime>\",\n    \"profilePicture\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users?page=1&limit=10&sort=<string>&order=ASC&role=buyer&membership_date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "Page number for pagination"
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Number of items per page"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Field to sort by"
														},
														{
															"key": "order",
															"value": "ASC",
															"description": "Sort order"
														},
														{
															"key": "role",
															"value": "buyer",
															"description": "Filter by user role"
														},
														{
															"key": "membership_date",
															"value": "<date>",
															"description": "Filter by membership date"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "User deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a category by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Category details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Create a new category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											]
										}
									},
									"response": [
										{
											"name": "Category created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Update an existing category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Category updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Category deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all categories with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories?page=1&limit=10&sort=<string>&order=ASC&name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Field to sort by"
										},
										{
											"key": "order",
											"value": "ASC",
											"description": "Sort order"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by category name"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of categories",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories?page=1&limit=10&sort=<string>&order=ASC&name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Field to sort by"
												},
												{
													"key": "order",
													"value": "ASC",
													"description": "Sort order"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by category name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "comments",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a comment by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Comment ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Comment details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Comment not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an existing comment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"rating\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Comment ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Comment updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"rating\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Comment not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"rating\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a comment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Comment ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Comment deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Comment not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Get all comments of seller's houses by seller ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/comments/seller/:seller_id?page=1&limit=10&sort=created_at&order=DESC&rating=<string>&user_id=<number>&house_id=<number>&parent_comment_id=<number>&created_at_from=<date>&created_at_to=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments",
												"seller",
												":seller_id"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "limit number for pagination"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Sort by options in the list"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Determine the order with DESC or ASC"
												},
												{
													"key": "rating",
													"value": "<string>",
													"description": "Filter by rating (1-5 stars)"
												},
												{
													"key": "user_id",
													"value": "<number>",
													"description": "Filter by user ID (must be a valid user ID)"
												},
												{
													"key": "house_id",
													"value": "<number>",
													"description": "Filter by house ID (must be a valid house ID)"
												},
												{
													"key": "parent_comment_id",
													"value": "<number>",
													"description": "Filter by parent_comment_id ( must be a valid comment ID )"
												},
												{
													"key": "created_at_from",
													"value": "<date>",
													"description": "Date created from Filter"
												},
												{
													"key": "created_at_to",
													"value": "<date>",
													"description": "Date created to Filter"
												}
											],
											"variable": [
												{
													"key": "seller_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Get all comments of seller's houses by seller ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/comments/seller/:seller_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"comments",
														"seller",
														":seller_id"
													],
													"variable": [
														{
															"key": "seller_id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": "",
											"header": [],
											"cookie": [
												{
													"expires": "Invalid Date"
												}
											],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all comments with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/comments?page=1&limit=10&sort=created_at&order=DESC&house_id=<number>&user_id=<number>&rating=<number>&parent_comment_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"comments"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page (max 100)"
										},
										{
											"key": "sort",
											"value": "created_at",
											"description": "Field to sort by (created_at, updated_at, or rating)"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "Sort order (ASC for ascending, DESC for descending)"
										},
										{
											"key": "house_id",
											"value": "<number>",
											"description": "Filter by house ID (must be a valid house ID)"
										},
										{
											"key": "user_id",
											"value": "<number>",
											"description": "Filter by user ID (must be a valid user ID)"
										},
										{
											"key": "rating",
											"value": "<number>",
											"description": "Filter by rating (1-5 stars)"
										},
										{
											"key": "parent_comment_id",
											"value": "<number>",
											"description": "Filter by parent_comment_id ( must be a valid comment ID )"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of comments",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/comments?page=1&limit=10&sort=created_at&order=DESC&house_id=<integer>&user_id=<integer>&rating=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page (max 100)"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Field to sort by (created_at, updated_at, or rating)"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort order (ASC for ascending, DESC for descending)"
												},
												{
													"key": "house_id",
													"value": "<integer>",
													"description": "Filter by house ID (must be a valid house ID)"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user ID (must be a valid user ID)"
												},
												{
													"key": "rating",
													"value": "<number>",
													"description": "Filter by rating (1-5 stars)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create a new comment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"rating\": \"<number>\",\n  \"parent_comment_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"response": [
								{
									"name": "Comment created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"rating\": \"<number>\",\n  \"parent_comment_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "accommodations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an accommodation by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/accommodations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accommodations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Accommodation ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Accommodation details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/accommodations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Accommodation not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Accommodation not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/accommodations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Update an existing accommodation",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"facility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/accommodations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accommodations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Accommodation ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Accommodation updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"house_id\": \"<integer>\",\n  \"facility\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accommodations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Accommodation not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Accommodation not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"house_id\": \"<integer>\",\n  \"facility\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accommodations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete an accommodation",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/accommodations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accommodations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Accommodation ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Accommodation deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/accommodations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Accommodation not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/accommodations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a new accommodation",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"house_id\": \"<integer>\",\n  \"facility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/accommodations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accommodations"
											]
										}
									},
									"response": [
										{
											"name": "Accommodation created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"house_id\": \"<integer>\",\n  \"facility\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accommodations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accommodations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Accommodation not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all accommodations with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/accommodations?page=1&limit=10&sort=created_at&order=DESC&house_id=<integer>&facility=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"accommodations"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page (max 100)"
										},
										{
											"key": "sort",
											"value": "created_at",
											"description": "Field to sort by (created_at, updated_at, or house_id)"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "Sort order (ASC for ascending, DESC for descending)"
										},
										{
											"key": "house_id",
											"value": "<integer>",
											"description": "Filter by house ID (must be a valid house ID)"
										},
										{
											"key": "facility",
											"value": "<string>",
											"description": "Filter by facility name (case-insensitive partial match)"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of accommodations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/accommodations?page=1&limit=10&sort=created_at&order=DESC&house_id=<integer>&facility=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accommodations"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page (max 100)"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Field to sort by (created_at, updated_at, or house_id)"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort order (ASC for ascending, DESC for descending)"
												},
												{
													"key": "house_id",
													"value": "<integer>",
													"description": "Filter by house ID (must be a valid house ID)"
												},
												{
													"key": "facility",
													"value": "<string>",
													"description": "Filter by facility name (case-insensitive partial match)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Accommodation not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Accommodation not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Level 2 - Secondary APIs",
			"item": [
				{
					"name": "wishlist",
					"item": [
						{
							"name": "{houseId}",
							"item": [
								{
									"name": "Remove a property from the user's wishlist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"houseId\": \"<number>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Property removed from wishlist successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/wishlist/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"wishlist",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/wishlist/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"wishlist",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Property not found in wishlist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/wishlist/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"wishlist",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Add a property to the user's wishlist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist"
									]
								}
							},
							"response": [
								{
									"name": "Property added to wishlist successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"wishlistItem\": {\n    \"id\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"note\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
								},
								{
									"name": "Missing required fields",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the user's wishlist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/wishlist?page=1&limit=10&sortBy=createdAt&order=ASC&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "order",
											"value": "ASC"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "search on the notes"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of properties in user's wishlist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"note\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"house\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"price\": \"<number>\",\n      \"location\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"note\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"house\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"price\": \"<number>\",\n      \"location\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n]"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "blogs",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a blog post by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/blogs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"blogs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Blog post ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Blog post details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Blog not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Invalid blog ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Blog post not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an existing blog post",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"estimated_reading_time\": \"<string>\",\n  \"author_id\": \"<integer>\",\n  \"category_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/blogs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"blogs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Blog post ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Blog post updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"estimated_reading_time\": \"<string>\",\n  \"author_id\": \"<integer>\",\n  \"category_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Blog not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Blog post not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"estimated_reading_time\": \"<string>\",\n  \"author_id\": \"<integer>\",\n  \"category_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a blog post",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/blogs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"blogs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Blog post ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Blog post deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Blog post not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/blogs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"blogs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all blog posts with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/blogs?page=1&limit=10&sort=created_at&order=DESC&title=<string>&author_id=<integer>&category_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogs"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page (max 100)"
										},
										{
											"key": "sort",
											"value": "created_at",
											"description": "Field to sort by (created_at, updated_at, title, or views)"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "Sort order (ASC for ascending, DESC for descending)"
										},
										{
											"key": "title",
											"value": "<string>",
											"description": "Filter by blog title (case-insensitive partial match)"
										},
										{
											"key": "author_id",
											"value": "<integer>",
											"description": "Filter by author ID (must be a valid user ID)"
										},
										{
											"key": "category_id",
											"value": "<integer>",
											"description": "Filter by category ID (must be a valid category ID)"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of blog posts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/blogs?page=1&limit=10&sort=created_at&order=DESC&title=<string>&author_id=<integer>&category_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"blogs"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page (max 100)"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Field to sort by (created_at, updated_at, title, or views)"
												},
												{
													"key": "order",
													"value": "DESC",
													"description": "Sort order (ASC for ascending, DESC for descending)"
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Filter by blog title (case-insensitive partial match)"
												},
												{
													"key": "author_id",
													"value": "<integer>",
													"description": "Filter by author ID (must be a valid user ID)"
												},
												{
													"key": "category_id",
													"value": "<integer>",
													"description": "Filter by category ID (must be a valid category ID)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Blog not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Blog not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create a new blog post",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"estimated_reading_time\": \"<string>\",\n  \"author_id\": \"<integer>\",\n  \"category_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/blogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogs"
									]
								}
							},
							"response": [
								{
									"name": "Blog post created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"caption\": \"<string>\",\n  \"estimated_reading_time\": \"<string>\",\n  \"author_id\": \"<integer>\",\n  \"category_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/blogs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"blogs"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Blog not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "saved-searches",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a saved search",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) ID of the saved search to delete"
												}
											]
										}
									},
									"response": [
										{
											"name": "Saved search deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/saved-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"saved-searches",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/saved-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"saved-searches",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Saved search not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/saved-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"saved-searches",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new saved search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"searchQuery\": \"<string>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/saved-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"saved-searches"
									]
								}
							},
							"response": [
								{
									"name": "Saved search created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"searchQuery\": \"<string>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"userId\": \"<integer>\",\n  \"searchQuery\": \"<string>\",\n  \"note\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
								},
								{
									"name": "Missing required fields or unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"searchQuery\": \"<string>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"searchQuery\": \"<string>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all saved searches for the authenticated user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/saved-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"saved-searches"
									]
								}
							},
							"response": [
								{
									"name": "List of saved searches",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"userId\": \"<integer>\",\n    \"searchQuery\": \"<string>\",\n    \"note\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"userId\": \"<integer>\",\n    \"searchQuery\": \"<string>\",\n    \"note\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/saved-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"saved-searches"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "social-bookmarks",
					"item": [
						{
							"name": "bookmark",
							"item": [
								{
									"name": "Bookmark a property with a note and generate a shareable URL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/social-bookmarks/bookmark",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"social-bookmarks",
												"bookmark"
											]
										}
									},
									"response": [
										{
											"name": "Property bookmarked successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/social-bookmarks/bookmark",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-bookmarks",
														"bookmark"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"bookmark\": {\n    \"userId\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"note\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"shareUrl\": \"<string>\"\n}"
										},
										{
											"name": "houseId is required or unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/social-bookmarks/bookmark",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-bookmarks",
														"bookmark"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/social-bookmarks/bookmark",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-bookmarks",
														"bookmark"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "social-media-links",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a social media link by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/social-media-links/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"social-media-links",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Social media link ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Social media link details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"name": "Social media link not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all social media links with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/social-media-links?page=1&limit=10&sort=<string>&order=ASC&platform=<string>&url=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"social-media-links"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Field to sort by"
										},
										{
											"key": "order",
											"value": "ASC",
											"description": "Sort order"
										},
										{
											"key": "platform",
											"value": "<string>",
											"description": "Filter by platform name"
										},
										{
											"key": "url",
											"value": "<string>",
											"description": "Filter by URL"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of social media links",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/social-media-links?page=1&limit=10&sort=<string>&order=ASC&platform=<string>&url=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"social-media-links"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Field to sort by"
												},
												{
													"key": "order",
													"value": "ASC",
													"description": "Sort order"
												},
												{
													"key": "platform",
													"value": "<string>",
													"description": "Filter by platform name"
												},
												{
													"key": "url",
													"value": "<string>",
													"description": "Filter by URL"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"platform\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"platform\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "price-history",
					"item": [
						{
							"name": "{houseId}",
							"item": [
								{
									"name": "monthly-changes",
									"item": [
										{
											"name": "Get monthly percentage change of price for a property",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/price-history/:houseId/monthly-changes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"price-history",
														":houseId",
														"monthly-changes"
													],
													"variable": [
														{
															"key": "houseId",
															"value": "<integer>",
															"description": "(Required) ID of the house to get monthly price changes for"
														}
													]
												}
											},
											"response": [
												{
													"name": "List of monthly price changes",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/price-history/:houseId/monthly-changes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"price-history",
																":houseId",
																"monthly-changes"
															],
															"variable": [
																{
																	"key": "houseId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"month\": \"<string>\",\n    \"percentageChange\": \"<string>\"\n  },\n  {\n    \"month\": \"<string>\",\n    \"percentageChange\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Missing property id",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/price-history/:houseId/monthly-changes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"price-history",
																":houseId",
																"monthly-changes"
															],
															"variable": [
																{
																	"key": "houseId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get full price history for a property",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/price-history/:houseId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"price-history",
												":houseId"
											],
											"variable": [
												{
													"key": "houseId",
													"value": "<integer>",
													"description": "(Required) ID of the house to get price history for"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of price history records",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/price-history/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"price-history",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"houseId\": \"<integer>\",\n    \"price\": \"<number>\",\n    \"recordedAt\": \"<dateTime>\"\n  },\n  {\n    \"houseId\": \"<integer>\",\n    \"price\": \"<number>\",\n    \"recordedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Missing property id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/price-history/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"price-history",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "property-qa",
					"item": [
						{
							"name": "question",
							"item": [
								{
									"name": "Create a new question for a property",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"question\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/property-qa/question",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"property-qa",
												"question"
											]
										}
									},
									"response": [
										{
											"name": "Question created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"question\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"question"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"houseId\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}"
										},
										{
											"name": "Missing required fields",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"question\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"question"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"houseId\": \"<integer>\",\n  \"question\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"question"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "answer",
							"item": [
								{
									"name": "Post an answer to a question",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"questionId\": \"<integer>\",\n  \"answer\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/property-qa/answer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"property-qa",
												"answer"
											]
										}
									},
									"response": [
										{
											"name": "Answer posted successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"questionId\": \"<integer>\",\n  \"answer\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/answer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"answer"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"houseId\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"answer\": \"<string>\",\n  \"answeredBy\": \"<integer>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
										},
										{
											"name": "Missing required fields",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"questionId\": \"<integer>\",\n  \"answer\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/answer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"answer"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"questionId\": \"<integer>\",\n  \"answer\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/answer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"answer"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Question not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"questionId\": \"<integer>\",\n  \"answer\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/answer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														"answer"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{houseId}",
							"item": [
								{
									"name": "Get all Q&A for a specific property",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/property-qa/:houseId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"property-qa",
												":houseId"
											],
											"variable": [
												{
													"key": "houseId",
													"value": "<integer>",
													"description": "(Required) ID of the house to get Q&A for"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of Q&A for the property",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"question\": \"<string>\",\n    \"answer\": \"<string>\",\n    \"answeredBy\": \"<integer>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"question\": \"<string>\",\n    \"answer\": \"<string>\",\n    \"answeredBy\": \"<integer>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Invalid property id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/property-qa/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"property-qa",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "documents",
					"item": [
						{
							"name": "upload",
							"item": [
								{
									"name": "Upload a document for a house",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "document",
													"description": "(Required) Document file to upload",
													"type": "file",
													"src": []
												},
												{
													"key": "houseId",
													"value": "<integer>",
													"description": "(Required) ID of the house",
													"type": "text"
												},
												{
													"key": "documentType",
													"value": "contract",
													"description": "(Required) Type of the document (This can only be one of contract,ownership)",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/documents/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"documents",
												"upload"
											]
										}
									},
									"response": [
										{
											"name": "Document uploaded successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "document",
															"description": "(Required) Document file to upload",
															"type": "file",
															"src": []
														},
														{
															"key": "houseId",
															"value": "<integer>",
															"description": "(Required) ID of the house",
															"type": "text"
														},
														{
															"key": "documentType",
															"value": "contract",
															"description": "(Required) Type of the document (This can only be one of contract,ownership)",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/documents/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"documents",
														"upload"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Document not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "File, houseId, or documentType is required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "document",
															"description": "(Required) Document file to upload",
															"type": "file",
															"src": []
														},
														{
															"key": "houseId",
															"value": "<integer>",
															"description": "(Required) ID of the house",
															"type": "text"
														},
														{
															"key": "documentType",
															"value": "contract",
															"description": "(Required) Type of the document (This can only be one of contract,ownership)",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/documents/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"documents",
														"upload"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "sign",
									"item": [
										{
											"name": "Digitally sign a document",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "document",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/documents/:id/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"documents",
														":id",
														"sign"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Document ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Document signed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/documents/:id/sign",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"documents",
																":id",
																"sign"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"signature\": \"<string>\"\n}"
												},
												{
													"name": "Document not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/documents/:id/sign",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"documents",
																":id",
																"sign"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get document metadata by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/documents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"documents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Document ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Document metadata",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/documents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"documents",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Document not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Document not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/documents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"documents",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete document by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/documents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"documents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete document by ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/documents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"documents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Get documents for a house",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/documents/house/:houseId?page=1&limit=10&sort=createdAt&order=DESC&documentType=<string>&signed=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"documents",
										"house",
										":houseId"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sort",
											"value": "createdAt"
										},
										{
											"key": "order",
											"value": "DESC"
										},
										{
											"key": "documentType",
											"value": "<string>"
										},
										{
											"key": "signed",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "houseId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get documents for a house",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/documents/house/:houseId?page=1&limit=10&sort=created_at&order=DESC&documentType=<string>&signed=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"documents",
												"house",
												":houseId"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "created_at"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "documentType",
													"value": "<string>"
												},
												{
													"key": "signed",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "houseId",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "notifications",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Mark as read",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/notifications/:id/read",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"notifications",
												":id",
												"read"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Mark as read",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/notifications/:id/read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"notifications",
														":id",
														"read"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Mark all as read",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/notifications/mark-all-as-read",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"notifications",
												"mark-all-as-read"
											]
										}
									},
									"response": [
										{
											"name": "Mark all as read",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/notifications/mark-all-as-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"notifications",
														"mark-all-as-read"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Send a real-time notification to a specified room",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"room\": \"<string>\",\n  \"notification\": {\n    \"userId\": \"<intiger>\",\n    \"title\": \"<string>\",\n    \"message\": \"<string>\",\n    \"type\": \"<string>\",\n    \"data\": { \"offerId\": \"<intiger>\" }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notifications"
									]
								}
							},
							"response": [
								{
									"name": "Notification sent successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"room\": \"<string>\",\n  \"notification\": {\n    \"title\": \"<string>\",\n    \"message\": \"<string>\",\n    \"type\": \"<string>\",\n    \"data\": {}\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"notifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Missing required fields",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"room\": \"<string>\",\n  \"notification\": {\n    \"title\": \"<string>\",\n    \"message\": \"<string>\",\n    \"type\": \"<string>\",\n    \"data\": {}\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"notifications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all notifications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/notifications?page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get all notifications",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"notifications"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get notifications user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/notifications/:userId?page=1&limit=10&sort=createdAt&order=DESC&isRead=<boolean>&type=<string>&title=<string>&message=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notifications",
										":userId"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sort",
											"value": "createdAt"
										},
										{
											"key": "order",
											"value": "DESC"
										},
										{
											"key": "isRead",
											"value": "<boolean>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "title",
											"value": "<string>"
										},
										{
											"key": "message",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get notifications user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/notifications/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"notifications",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "targeted-notifications",
					"item": [
						{
							"name": "settings",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update a notification setting",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"notificationType\": \"new_property\", // \"new_booking\", \"system\", \"discount\", \"new_payment\", \"new_property\"\n  \"criteria\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Notification setting ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Notification setting updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"targeted-notifications",
																"settings",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<integer>\",\n  \"notificationType\": \"price_drop\",\n  \"criteria\": {},\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"targeted-notifications",
																"settings",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"targeted-notifications",
																"settings",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Notification setting not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"targeted-notifications",
																"settings",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a notification setting",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Notification setting deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"targeted-notifications",
																"settings",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Notification setting not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/targeted-notifications/settings/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"targeted-notifications",
																"settings",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Create a new notification setting",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"notificationType\": \"new_property\", // \"new_booking\", \"system\", \"discount\", \"new_payment\", \"new_property\"\n  \"criteria\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/targeted-notifications/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"targeted-notifications",
												"settings"
											]
										}
									},
									"response": [
										{
											"name": "Notification setting created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<integer>\",\n  \"notificationType\": \"price_drop\",\n  \"criteria\": {},\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
										},
										{
											"name": "notificationType is required or unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"notificationType\": \"new_property\",\n  \"criteria\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get all notification settings for the authenticated user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/targeted-notifications/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"targeted-notifications",
												"settings"
											]
										}
									},
									"response": [
										{
											"name": "List of notification settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"userId\": \"<integer>\",\n    \"notificationType\": \"new_property\",\n    \"criteria\": {},\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"userId\": \"<integer>\",\n    \"notificationType\": \"new_property\",\n    \"criteria\": {},\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"settings"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "send-scheduled",
							"item": [
								{
									"name": "Simulate sending scheduled notifications",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"notificationType\": \"new_property\", // new_property, discount\r\n  \"criteria\": {\r\n    \"priceThreshold\": \"<intiger>\",\r\n    \"region\": \"<string>\"\r\n  }\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/targeted-notifications/send-scheduled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"targeted-notifications",
												"send-scheduled"
											]
										}
									},
									"response": [
										{
											"name": "Scheduled notifications sent",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/targeted-notifications/send-scheduled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"targeted-notifications",
														"send-scheduled"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"settings\": [\n    {\n      \"userId\": \"<integer>\",\n      \"notificationType\": \"price_drop\",\n      \"criteria\": {}\n    },\n    {\n      \"userId\": \"<integer>\",\n      \"notificationType\": \"price_drop\",\n      \"criteria\": {}\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "ticket-notification",
					"item": [
						{
							"name": "send",
							"item": [
								{
									"name": "Send a ticket notification (test endpoint)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<dateTime>\",\n    \"<dateTime>\"\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ticket-notification/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ticket-notification",
												"send"
											]
										}
									},
									"response": [
										{
											"name": "Ticket notification sent successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<dateTime>\",\n    \"<dateTime>\"\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/ticket-notification/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ticket-notification",
														"send"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<dateTime>\",\n    \"<dateTime>\"\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/ticket-notification/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ticket-notification",
														"send"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"houseId\": \"<integer>\",\n  \"reservedDates\": [\n    \"<dateTime>\",\n    \"<dateTime>\"\n  ],\n  \"sharedEmail\": \"<email>\",\n  \"sharedMobile\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/ticket-notification/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ticket-notification",
														"send"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "user-activity",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "Get user activity statistics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user-activity/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user-activity",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "User activity statistics",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user-activity/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user-activity",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<integer>\",\n  \"bookingCount\": \"<integer>\",\n  \"feedbackGiven\": \"<integer>\",\n  \"feedbackReceived\": \"<integer>\",\n  \"housesCreated\": \"<integer>\"\n}"
										},
										{
											"name": "Invalid user ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user-activity/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user-activity",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "comparison",
					"item": [
						{
							"name": "Compare multiple properties by IDs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/comparison?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"comparison"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>",
											"description": "(Required) Comma-separated list of house IDs to compare (e.g. \"1,2,3\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of houses for comparison",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/comparison?ids=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comparison"
											],
											"query": [
												{
													"key": "ids",
													"value": "<string>",
													"description": "(Required) Comma-separated list of house IDs to compare (e.g. \"1,2,3\")"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  }\n]"
								},
								{
									"name": "No house IDs provided",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/comparison?ids=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comparison"
											],
											"query": [
												{
													"key": "ids",
													"value": "<string>",
													"description": "(Required) Comma-separated list of house IDs to compare (e.g. \"1,2,3\")"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "feedback",
					"item": [
						{
							"name": "received",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "Get all feedback received by a user (and total loyalty points)",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/feedback/received/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"feedback",
														"received",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<integer>",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "List of feedback received and total points",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/feedback/received/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"feedback",
																"received",
																":userId"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"feedbacks\": [\n    {\n      \"value\": \"reference #/components/schemas/Feedback not found in the OpenAPI spec\"\n    },\n    {\n      \"value\": \"reference #/components/schemas/Feedback not found in the OpenAPI spec\"\n    }\n  ],\n  \"totalPoints\": \"<integer>\"\n}"
												},
												{
													"name": "Invalid user ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/feedback/received/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"feedback",
																"received",
																":userId"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "given",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "Get all feedback given by a user",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/feedback/given/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"feedback",
														"given",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<integer>",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "List of feedback given",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/feedback/given/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"feedback",
																"given",
																":userId"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Feedback not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Feedback not found in the OpenAPI spec\"\n  }\n]"
												},
												{
													"name": "Invalid user ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/feedback/given/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"feedback",
																"given",
																":userId"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "loyalty",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "Get total loyalty points for a user",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/feedback/loyalty/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"feedback",
														"loyalty",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<integer>",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Total loyalty points for the user",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/feedback/loyalty/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"feedback",
																"loyalty",
																":userId"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<integer>\",\n  \"totalPoints\": \"<integer>\"\n}"
												},
												{
													"name": "Invalid user ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/feedback/loyalty/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"feedback",
																"loyalty",
																":userId"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Create new feedback (review and loyalty points)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"<integer>\",\n  \"houseId\": \"<integer>\",\n  \"rating\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"pointsAwarded\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/feedback",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"feedback"
									]
								}
							},
							"response": [
								{
									"name": "Feedback created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reviewerId\": \"<integer>\",\n  \"revieweeId\": \"<integer>\",\n  \"rating\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"pointsAwarded\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/feedback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Feedback not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Missing required fields",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reviewerId\": \"<integer>\",\n  \"revieweeId\": \"<integer>\",\n  \"rating\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"pointsAwarded\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/feedback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "public-profile",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get public profile information for a user",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/public-profile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"public-profile",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) ID of the user to get public profile for"
												}
											]
										}
									},
									"response": [
										{
											"name": "Public profile information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/public-profile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"public-profile",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"role\": \"admin\",\n    \"profilePicture\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Invalid user ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/public-profile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"public-profile",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/public-profile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"public-profile",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "recommendations",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "Get property recommendations for a user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/recommendations/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"recommendations",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "(Required) ID of the user to get recommendations for"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of recommended properties",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/recommendations/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"recommendations",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<integer>\",\n  \"recommendations\": [\n    {\n      \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n    },\n    {\n      \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/recommendations/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"recommendations",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "predict",
							"item": [
								{
									"name": "Predict the price of a property based on features",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"size\": \"<number>\",\n  \"rooms\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"amenities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/recommendations/predict",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"recommendations",
												"predict"
											]
										}
									},
									"response": [
										{
											"name": "Predicted price for the property",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"size\": \"<number>\",\n  \"rooms\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"amenities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/recommendations/predict",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"recommendations",
														"predict"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"predictedPrice\": \"<number>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"size\": \"<number>\",\n  \"rooms\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"amenities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/recommendations/predict",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"recommendations",
														"predict"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "chats",
					"item": [
						{
							"name": "{room}",
							"item": [
								{
									"name": "Get chat history for a specific room",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/chats/:room",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats",
												":room"
											],
											"variable": [
												{
													"key": "room",
													"value": "<string>",
													"description": "(Required) Chat room identifier"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of chat messages in the room",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/chats/:room",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														":room"
													],
													"variable": [
														{
															"key": "room"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Chat not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Chat not found in the OpenAPI spec\"\n  }\n]"
										},
										{
											"name": "Missing room parameter",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/chats/:room",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														":room"
													],
													"variable": [
														{
															"key": "room"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "send",
							"item": [
								{
									"name": "Send a new chat message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"room\": \"<string>\",\n  \"sender\": \"<string>\",\n  \"message\": \"<string>\",\n  \"getterId\": \"<intiger>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/chats/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats",
												"send"
											]
										}
									},
									"response": [
										{
											"name": "Message sent successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"room\": \"<string>\",\n  \"sender\": \"<string>\",\n  \"message\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/chats/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														"send"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Chat not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Missing required fields",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"room\": \"<string>\",\n  \"sender\": \"<string>\",\n  \"message\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/chats/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														"send"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upload",
							"item": [
								{
									"name": "Upload a file for chat",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "files",
													"description": "(Required) File to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/chats/upload/:room",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats",
												"upload",
												":room"
											],
											"variable": [
												{
													"key": "room",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "File uploaded successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"description": "(Required) File to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/chats/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														"upload"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"fileUrl\": \"<string>\"\n}"
										},
										{
											"name": "File is required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"description": "(Required) File to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/chats/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														"upload"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "my-chats",
							"item": [
								{
									"name": "Get last chat of rooms",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/chats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "users-in-rooms",
							"item": [
								{
									"name": "Get users in rooms",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/chats/users-in-room/:room",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats",
												"users-in-room",
												":room"
											],
											"variable": [
												{
													"key": "room",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Edit message by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"message\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/chats/edit/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats",
												"edit",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Edit message by ID",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"message\": \"<string>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/chats/edit/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														"edit",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete message by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/chats/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"chats",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete message by ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/chats/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"chats",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "discount-codes",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a discount code by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/discount-codes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"discount-codes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Discount code ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Discount code details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/DiscountCode not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Discount code not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all discount codes with filtering, pagination, and sorting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/discount-codes?page=1&limit=10&sort=<string>&order=ASC&code=<string>&discount_percentage=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"discount-codes"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Field to sort by"
										},
										{
											"key": "order",
											"value": "ASC",
											"description": "Sort order"
										},
										{
											"key": "code",
											"value": "<string>",
											"description": "Filter by code"
										},
										{
											"key": "discount_percentage",
											"value": "<number>",
											"description": "Filter by discount percentage"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of discount codes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/discount-codes?page=1&limit=10&sort=<string>&order=ASC&code=<string>&discount_percentage=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"discount-codes"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Field to sort by"
												},
												{
													"key": "order",
													"value": "ASC",
													"description": "Sort order"
												},
												{
													"key": "code",
													"value": "<string>",
													"description": "Filter by code"
												},
												{
													"key": "discount_percentage",
													"value": "<number>",
													"description": "Filter by discount percentage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"reference #/components/schemas/DiscountCode not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/DiscountCode not found in the OpenAPI spec\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "reporting",
					"item": [
						{
							"name": "advanced",
							"item": [
								{
									"name": "Get advanced reports including conversion rate, average booking price, total revenue, booking distribution, and heatmap data",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reporting/advanced",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reporting",
												"advanced"
											]
										}
									},
									"response": [
										{
											"name": "Advanced reporting data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/reporting/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reporting",
														"advanced"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"conversionRate\": \"<string>\",\n  \"avgBookingPrice\": \"<string>\",\n  \"totalRevenue\": \"<string>\",\n  \"bookingDistribution\": [\n    {\n      \"transactionType\": \"<string>\",\n      \"count\": \"<integer>\"\n    },\n    {\n      \"transactionType\": \"<string>\",\n      \"count\": \"<integer>\"\n    }\n  ],\n  \"heatmapData\": [\n    {\n      \"area_name\": \"<string>\",\n      \"houseCount\": \"<integer>\"\n    },\n    {\n      \"area_name\": \"<string>\",\n      \"houseCount\": \"<integer>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/reporting/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reporting",
														"advanced"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Admin access required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/reporting/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reporting",
														"advanced"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "visit-appointments",
					"item": [
						{
							"name": "house",
							"item": [
								{
									"name": "{houseId}",
									"item": [
										{
											"name": "Get all appointments for a specific house",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/house/:houseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														"house",
														":houseId"
													],
													"variable": [
														{
															"key": "houseId",
															"value": "<integer>",
															"description": "(Required) House ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "List of appointments for the house",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/visit-appointments/house/:houseId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"visit-appointments",
																"house",
																":houseId"
															],
															"variable": [
																{
																	"key": "houseId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"appointmentTime\": \"<dateTime>\",\n    \"type\": \"in_person\",\n    \"status\": \"pending\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"appointmentTime\": \"<dateTime>\",\n    \"type\": \"virtual\",\n    \"status\": \"confirmed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
												},
												{
													"name": "House ID is required",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/visit-appointments/house/:houseId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"visit-appointments",
																"house",
																":houseId"
															],
															"variable": [
																{
																	"key": "houseId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "user",
							"item": [
								{
									"name": "Get all appointments for the authenticated user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/visit-appointments/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-appointments",
												"user"
											]
										}
									},
									"response": [
										{
											"name": "List of user's appointments",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														"user"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"appointmentTime\": \"<dateTime>\",\n    \"type\": \"in_person\",\n    \"status\": \"pending\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"appointmentTime\": \"<dateTime>\",\n    \"type\": \"virtual\",\n    \"status\": \"confirmed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														"user"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														"user"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "cancel",
									"item": [
										{
											"name": "Cancel an appointment",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Appointment ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Appointment canceled successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/visit-appointments/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"visit-appointments",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"appointment\": {\n    \"id\": \"<integer>\",\n    \"houseId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"appointmentTime\": \"<dateTime>\",\n    \"type\": \"virtual\",\n    \"status\": \"confirmed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/visit-appointments/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"visit-appointments",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Appointment not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/visit-appointments/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"visit-appointments",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Update an existing appointment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\",\n  \"status\": \"confirmed\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/visit-appointments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-appointments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Appointment ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Appointment updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\",\n  \"status\": \"confirmed\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"houseId\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\",\n  \"status\": \"pending\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\",\n  \"status\": \"confirmed\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Appointment not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\",\n  \"status\": \"confirmed\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/visit-appointments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-appointments",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new visit appointment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"houseId\": \"<integer>\",\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/visit-appointments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"visit-appointments"
									]
								}
							},
							"response": [
								{
									"name": "Appointment created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/visit-appointments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-appointments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"houseId\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\",\n  \"status\": \"pending\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
								},
								{
									"name": "Missing required fields or unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/visit-appointments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-appointments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"houseId\": \"<integer>\",\n  \"appointmentTime\": \"<dateTime>\",\n  \"type\": \"virtual\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/visit-appointments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-appointments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "seller finance",
					"item": [
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Get all customers payments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/seller/finance?page=1&limit=10&paymentStatus=<string>&transactionType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"seller",
												"finance"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "paymentStatus",
													"value": "<string>"
												},
												{
													"key": "transactionType",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get seller finance dashboard",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/seller/finance?page=1&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"seller",
														"finance"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"_postman_previewlanguage": "",
											"header": [],
											"cookie": [
												{
													"expires": "Invalid Date"
												}
											],
											"body": ""
										}
									]
								},
								{
									"name": "Get dashboard finance",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/seller/finance/dashboard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"seller",
												"finance",
												"dashboard"
											]
										}
									},
									"response": [
										{
											"name": "Get dashboard finance",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/seller/finance/dashboard",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"seller",
														"finance",
														"dashboard"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "admin",
					"item": [
						{
							"name": "dashboard",
							"item": [
								{
									"name": "Get dashboard summary including total users, houses, bookings, and average comment rating",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/dashboard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"dashboard"
											]
										}
									},
									"response": [
										{
											"name": "Dashboard summary data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/dashboard",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"dashboard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalUsers\": \"<integer>\",\n  \"totalHouses\": \"<integer>\",\n  \"totalBookings\": \"<integer>\",\n  \"averageRating\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "role",
											"item": [
												{
													"name": "Update a user's role",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"role\": \"admin\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/:id/role",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																":id",
																"role"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) User ID"
																}
															]
														}
													},
													"response": [
														{
															"name": "User role updated successfully",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"role\": \"admin\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/admin/users/:id/role",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"admin",
																		"users",
																		":id",
																		"role"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"user\": {\n    \"value\": \"reference #/components/schemas/User not found in the OpenAPI spec\"\n  }\n}"
														},
														{
															"name": "User not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"role\": \"admin\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/admin/users/:id/role",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"admin",
																		"users",
																		":id",
																		"role"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Delete a user account",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "User deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update a user account By ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"email\": \"<string>\",\r\n  \"fullName\": \"<string>\",\r\n  \"firstName\": \"<string>\",\r\n  \"lastName\": \"<string>\",\r\n  \"phoneNumber\": \"<string>\",\r\n  \"emailVerified\": \"<boolean>\",\r\n  \"membershipDate\": \"<Date>\",\r\n  \"profilePicture\": \"<string>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Update a user account By ID",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"email\": \"<string>\",\r\n  \"fullName\": \"<string>\",\r\n  \"firstName\": \"<string>\",\r\n  \"lastName\": \"<string>\",\r\n  \"phoneNumber\": \"<string>\",\r\n  \"emailVerified\": \"<boolean>\",\r\n  \"membershipDate\": \"<Date>\",\r\n  \"profilePicture\": \"<string>\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "Retrieve all users",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users?page=1&limit=10&sort=createdAt&order=DESC&email=<String>&role=<String>&membershipDate=<Date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "createdAt"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "email",
													"value": "<String>"
												},
												{
													"key": "role",
													"value": "<String>"
												},
												{
													"key": "membershipDate",
													"value": "<Date>"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of all users",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"users\": [\n    {\n      \"value\": \"reference #/components/schemas/User not found in the OpenAPI spec\"\n    },\n    {\n      \"value\": \"reference #/components/schemas/User not found in the OpenAPI spec\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "bookings",
							"item": [
								{
									"name": "continue",
									"item": [
										{
											"name": "Continue a canceled booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id/continue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id",
														"continue"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Booking ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Booking continued successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/continue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"continue"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"booking\": {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  }\n}"
												},
												{
													"name": "Only canceled bookings can be continued",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/continue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"continue"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Booking not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/continue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"continue"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Cancel a pending booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/bookings/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bookings",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Booking ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Booking canceled successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"booking\": {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  }\n}"
												},
												{
													"name": "Only pending bookings can be canceled",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Booking not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bookings/:id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bookings",
																":id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Retrieve all bookings",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/bookings?page=1&limit=10&sort=createdAt&order=DESC&status=<String>&user_id=<Intiger>&house_id=<String>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"bookings"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "createdAt"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "status",
													"value": "<String>"
												},
												{
													"key": "user_id",
													"value": "<Intiger>"
												},
												{
													"key": "house_id",
													"value": "<String>"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of all bookings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/bookings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"bookings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Booking not found in the OpenAPI spec\"\n  }\n]"
										}
									]
								},
								{
									"name": "Get a booking by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Get a booking by ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete a booking by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete a booking by ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Update a booking by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"houseId\": \"<integer>\",\r\n  \"reservedDates\": [\r\n    \"<date>\",\r\n    \"<date>\"\r\n  ],\r\n  \"traveler_details\": [\r\n    {\r\n      \"firstName\": \"<string>\",\r\n      \"lastName\": \"<string>\",\r\n      \"gender\": \"<string>\",\r\n      \"birthDate\": \"<date>\",\r\n      \"nationalId\": \"<string>\"\r\n    },\r\n    {\r\n      \"firstName\": \"<string>\",\r\n      \"lastName\": \"<string>\",\r\n      \"gender\": \"<string>\",\r\n      \"birthDate\": \"<date>\",\r\n      \"nationalId\": \"<string>\"\r\n    }\r\n  ],\r\n  \"status\": \"canceled\",\r\n  \"sharedEmail\": \"<email>\",\r\n  \"sharedMobile\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Update a booking by ID",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"houseId\": \"<integer>\",\r\n  \"reservedDates\": [\r\n    \"<date>\",\r\n    \"<date>\"\r\n  ],\r\n  \"traveler_details\": [\r\n    {\r\n      \"firstName\": \"<string>\",\r\n      \"lastName\": \"<string>\",\r\n      \"gender\": \"<string>\",\r\n      \"birthDate\": \"<date>\",\r\n      \"nationalId\": \"<string>\"\r\n    },\r\n    {\r\n      \"firstName\": \"<string>\",\r\n      \"lastName\": \"<string>\",\r\n      \"gender\": \"<string>\",\r\n      \"birthDate\": \"<date>\",\r\n      \"nationalId\": \"<string>\"\r\n    }\r\n  ],\r\n  \"status\": \"canceled\",\r\n  \"sharedEmail\": \"<email>\",\r\n  \"sharedMobile\": \"<string>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "houses",
							"item": [
								{
									"name": "Retrieve all houses",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/houses?page=1&limit=10&sort=created_at&order=DESC&sellerId=<Intiger>&price=<Number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"houses"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "created_at"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "sellerId",
													"value": "<Intiger>"
												},
												{
													"key": "price",
													"value": "<Number>"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of all houses",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/houses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"houses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/House not found in the OpenAPI spec\"\n  }\n]"
										}
									]
								},
								{
									"name": "Delete house by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/houses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"houses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete house by ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Update house by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"address\": \"<string>\",\r\n  \"rate\": \"<number>\",\r\n  \"price\": \"<number>\",\r\n  \"photos\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"tags\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"last_updated\": \"<ISO 8601 date string>\",\r\n  \"capacity\": \"<number>\",\r\n  \"location\": {\r\n    \"lat\": \"<number>\",\r\n    \"lng\": \"<number>\"\r\n  },\r\n  \"categories\": {\r\n    \"name\": \"<value>\"\r\n  },\r\n  \"bathrooms\": \"<number>\",\r\n  \"parking\": \"<number>\",\r\n  \"rooms\": \"<number>\",\r\n  \"yard_type\": \"<string>\",\r\n  \"num_comments\": \"<number>\",\r\n  \"transaction_type\": \"<\\\"rental\\\" | \\\"mortgage\\\" | \\\"reservation\\\" | \\\"direct_purchase\\\">\",\r\n  \"caption\": \"<string|null>\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/houses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"houses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Update house by ID",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"address\": \"<string>\",\r\n  \"rate\": \"<number>\",\r\n  \"price\": \"<number>\",\r\n  \"photos\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"tags\": [\"<string>\", \"<string>\", \"...\"],\r\n  \"last_updated\": \"<ISO 8601 date string>\",\r\n  \"capacity\": \"<number>\",\r\n  \"location\": {\r\n    \"lat\": \"<number>\",\r\n    \"lng\": \"<number>\"\r\n  },\r\n  \"categories\": {\r\n    \"name\": \"<value>\"\r\n  },\r\n  \"bathrooms\": \"<number>\",\r\n  \"parking\": \"<number>\",\r\n  \"rooms\": \"<number>\",\r\n  \"yard_type\": \"<string>\",\r\n  \"num_comments\": \"<number>\",\r\n  \"transaction_type\": \"<\\\"rental\\\" | \\\"mortgage\\\" | \\\"reservation\\\" | \\\"direct_purchase\\\">\",\r\n  \"caption\": \"<string|null>\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/houses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"houses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "comments",
							"item": [
								{
									"name": "Retrieve all comments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/comments?page=1&limit=10&sort=created_at&order=DESC&user_id=<Intiger>&house_id=<Intiger>&rating=<Number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"comments"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "created_at"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "user_id",
													"value": "<Intiger>"
												},
												{
													"key": "house_id",
													"value": "<Intiger>"
												},
												{
													"key": "rating",
													"value": "<Number>"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of all comments",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"comments"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/Comment not found in the OpenAPI spec\"\n  }\n]"
										}
									]
								},
								{
									"name": "Get a comment by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Get a comment by ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Update a comment by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"caption\": \"<string>\",\r\n  \"rating\": \"<intiger>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Update a comment by ID",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"caption\": \"<string>\",\r\n  \"rating\": \"<intiger>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete a comment by ID",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete a comment by ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "payments",
							"item": [
								{
									"name": "verify",
									"item": [
										{
											"name": "Verify a payment",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/payments/:id/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"payments",
														":id",
														"verify"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Payment ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Payment verified successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"payment\": {\n    \"value\": \"reference #/components/schemas/Payment not found in the OpenAPI spec\"\n  }\n}"
												},
												{
													"name": "Invalid payment ID or verification failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden - Cannot verify another user's payment",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Payment not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/payments/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"payments",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get all payments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/payments?page=1&limit=10&sort=createdAt&order=DESC&status=<String>&userId=<Intiger>&amount=<Number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"payments"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "createdAt"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "status",
													"value": "<String>"
												},
												{
													"key": "userId",
													"value": "<Intiger>"
												},
												{
													"key": "amount",
													"value": "<Number>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get all payments",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/payments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"payments"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get a payment by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Get a payment by ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Update a payment by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"amount\": \"<intiger>\",\r\n  \"status\": \"<string>\",\r\n  \"description\": \"<string>\",\r\n  \"transactionId\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Update a payment by ID",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"amount\": \"<intiger>\",\r\n  \"status\": \"<string>\",\r\n  \"description\": \"<string>\",\r\n  \"transactionId\": \"<string>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete a payment by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete a payment by ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/payments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"payments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "contact-us",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get a contact message by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/contact-us/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"contact-us",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Contact message ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Contact message details",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/contact-us/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"contact-us",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference #/components/schemas/ContactUs not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "Contact message not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/contact-us/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"contact-us",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a contact message",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/contact-us/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"contact-us",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Contact message ID"
														}
													]
												}
											},
											"response": [
												{
													"name": "Contact message deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/contact-us/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"contact-us",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Contact message not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/contact-us/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"contact-us",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get all contact messages with filtering, pagination, and sorting",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/contact-us?page=1&limit=10&sort=<string>&order=ASC&title=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"contact-us"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "order",
													"value": "ASC"
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Filter by message title"
												}
											]
										}
									},
									"response": [
										{
											"name": "List of contact messages",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/contact-us?page=1&limit=10&sort=<string>&order=ASC&title=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"contact-us"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "Page number for pagination"
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Number of items per page"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Field to sort by"
														},
														{
															"key": "order",
															"value": "ASC",
															"description": "Sort order"
														},
														{
															"key": "title",
															"value": "<string>",
															"description": "Filter by message title"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference #/components/schemas/ContactUs not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference #/components/schemas/ContactUs not found in the OpenAPI spec\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "locations",
							"item": [
								{
									"name": "Create a new location",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations"
											]
										}
									},
									"response": [
										{
											"name": "Location created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Delete a location",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Location ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Location deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Location not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an existing location",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Location ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Location updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Location not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Location not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"area_name\": \"<string>\",\n  \"lat\": \"<number>\",\n  \"lng\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "categories",
							"item": [
								{
									"name": "Create a new category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											]
										}
									},
									"response": [
										{
											"name": "Category created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Update an existing category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Category updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/Category not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Category deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "documents",
							"item": [
								{
									"name": "Get all documents",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/documents?page=1&limit=10&sort=createdAt&order=DESC&documentType=<string>&signed=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"documents"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "sort",
													"value": "createdAt"
												},
												{
													"key": "order",
													"value": "DESC"
												},
												{
													"key": "documentType",
													"value": "<string>"
												},
												{
													"key": "signed",
													"value": "<boolean>"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "social-media-links",
							"item": [
								{
									"name": "Create a new social media link",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/social-media-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"social-media-links"
											]
										}
									},
									"response": [
										{
											"name": "Social media link created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update an existing social media link",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/social-media-links/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"social-media-links",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Social media link ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Social media link updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"name": "Social media link not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"platform\": \"<string>\",\n  \"url\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a social media link",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/social-media-links/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"social-media-links",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Social media link ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Social media link deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Social media link not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/social-media-links/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"social-media-links",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "discount-codes",
							"item": [
								{
									"name": "Update an existing discount code",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"house_id\": \"<integer>\",\n  \"discount_percentage\": \"<number>\",\n  \"valid_until\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/discount-codes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"discount-codes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Discount code ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Discount code updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"<string>\",\n  \"discount_percentage\": \"<number>\",\n  \"valid_until\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/DiscountCode not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Discount code not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"<string>\",\n  \"discount_percentage\": \"<number>\",\n  \"valid_until\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a discount code",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/discount-codes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"discount-codes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Discount code ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Discount code deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Discount code not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a new discount code",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"house_id\": \"<integer>\",\n  \"discount_percentage\": \"<number>\",\n  \"valid_until\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/discount-codes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"discount-codes"
											]
										}
									},
									"response": [
										{
											"name": "Discount code created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"<string>\",\n  \"discount_percentage\": \"<number>\",\n  \"valid_until\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/discount-codes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"discount-codes"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference #/components/schemas/DiscountCode not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "chats",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Edit chat message",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"message\": \"<string>\",\r\n    \"getterId\": \"<integer>\",\r\n    \"room\": \"<string>\",\r\n    \"files\": \"<files>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/chats/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"chats",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Edit chat message",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"message\": \"<string>\",\r\n    \"getterId\": \"<integer>\",\r\n    \"room\": \"<string>\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/admin/chats/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"chats",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										},
										{
											"name": "Delete chat message",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/chats/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"chats",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Delete chat message",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/admin/chats/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"chats",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										},
										{
											"name": "Clear a room",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/chat-rooms/:room/clear",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"chat-rooms",
														":room",
														"clear"
													],
													"variable": [
														{
															"key": "room",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Clear a room",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/admin/chat-rooms/:room/clear",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"chat-rooms",
																":room",
																"clear"
															],
															"variable": [
																{
																	"key": "room",
																	"value": ""
																}
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "Get all room details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/chat-rooms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"chat-rooms"
											]
										}
									},
									"response": [
										{
											"name": "Get all chats of room",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/chat-rooms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"chat-rooms"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get all chats by room",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/chat-rooms/:room/chats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"chat-rooms",
												":room",
												"chats"
											],
											"variable": [
												{
													"key": "room",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Get all chats by room",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/admin/chat-rooms/:room/chats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"chat-rooms",
														":room",
														"chats"
													],
													"variable": [
														{
															"key": "room",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Level 3 - Features",
			"item": [
				{
					"name": "Tours",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Register a tour by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"John Doe\",\r\n  \"phoneNumber\": \"+1234567890\",\r\n  \"email\": \"johndoe@example.com\",\r\n  \"description\": \"Looking forward to the tour!\",\r\n  \"tourId\": \"42\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/tour/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Register a tour",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fullName\": \"John Doe\",\r\n  \"phoneNumber\": \"+1234567890\",\r\n  \"email\": \"johndoe@example.com\",\r\n  \"description\": \"Looking forward to the tour!\",\r\n  \"tourId\": \"42\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/tour/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"tour",
														"register"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get tour by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/tour/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Get tour by ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/tour/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"tour",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "{admin}",
							"item": [
								{
									"name": "Get admin tour",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/tour/admin?page=1&limit=10&title=<string>&tag=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												"admin"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "title",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Create tour",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userId\": \"<number>\",\r\n    \"title\": \"<string>\",\r\n    \"address\": \"<string>\",\r\n    \"photos\": [\r\n        \"<string>\",\r\n        \"<string>\"\r\n    ],\r\n    \"description\": \"<string>\",\r\n    \"tag\": \"<string>\",\r\n    \"price\": \"<string>\",\r\n    \"startDate\": \"<Date>\",\r\n    \"endDate\": \"<Date>\",\r\n    \"services\": [\r\n        \"<string>\"\r\n        // \"transportation\",\r\n        // \"meals\",\r\n        // \"guide\"\r\n    ],\r\n    \"facilities\": [\r\n        \"<string>\"\r\n        // \"wifi\",\r\n        // \"restrooms\",\r\n        // \"parking\"\r\n    ],\r\n    \"cancellationPeriodDays\": \"<number>\",\r\n    \"locations\": [\r\n        {\r\n            \"name\": \"<string>\", // Sari\r\n            \"lat\": \"<string>\", // \"36.1069\",\r\n            \"lng\": \"<string>\" // \"-112.1129\"\r\n        },\r\n        {\r\n            \"name\": \"<string>\", // Soedina\r\n            \"lat\": \"<string>\", // \"34.8697\",\r\n            \"lng\": \"<string>\" // \"-111.7609\"\r\n        }\r\n    ],\r\n    \"schedule\": [\r\n        {\r\n            \"title\": \"<string>\",\r\n            \"todos\": [\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                },\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\": \"<string>\",\r\n            \"todos\": [\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                },\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                }\r\n            ]\r\n        },\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/tour",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour"
											]
										}
									},
									"response": [
										{
											"name": "Create tour",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"userId\": \"<number>\",\r\n    \"title\": \"<string>\",\r\n    \"address\": \"<string>\",\r\n    \"photos\": [\r\n        \"<string>\",\r\n        \"<string>\"\r\n    ],\r\n    \"description\": \"<string>\",\r\n    \"tag\": \"<string>\",\r\n    \"price\": \"<string>\",\r\n    \"startDate\": \"<Date>\",\r\n    \"endDate\": \"<Date>\",\r\n    \"services\": [\r\n        \"<string>\"\r\n        // \"transportation\",\r\n        // \"meals\",\r\n        // \"guide\"\r\n    ],\r\n    \"facilities\": [\r\n        \"<string>\"\r\n        // \"wifi\",\r\n        // \"restrooms\",\r\n        // \"parking\"\r\n    ],\r\n    \"cancellationPeriodDays\": \"<number>\",\r\n    \"locations\": [\r\n        {\r\n            \"name\": \"<string>\", // Sari\r\n            \"lat\": \"<string>\", // \"36.1069\",\r\n            \"lng\": \"<string>\" // \"-112.1129\"\r\n        },\r\n        {\r\n            \"name\": \"<string>\", // Soedina\r\n            \"lat\": \"<string>\", // \"34.8697\",\r\n            \"lng\": \"<string>\" // \"-111.7609\"\r\n        }\r\n    ],\r\n    \"schedule\": [\r\n        {\r\n            \"title\": \"<string>\",\r\n            \"todos\": [\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                },\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\": \"<string>\",\r\n            \"todos\": [\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                },\r\n                {\r\n                    \"time\": \"<Date>\",\r\n                    \"todo\": \"<string>\"\r\n                }\r\n            ]\r\n        },\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/tour",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"tour"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete a tour by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/tour/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete a tour",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/tour/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"tour",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Update a tour by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"price\": \"<string>\",\r\n  \"description\": \"<string>\",\r\n  \"photos\": [\r\n    \"<string>\",\r\n    \"<string>\"\r\n  ],\r\n  \"cancellationPeriodDays\": \"<number>\",\r\n  \"services\": [\"transportation\", \"meals\", \"guide\", \"night hike\"],\r\n  \"facilities\": [\"wifi\", \"restrooms\", \"parking\", \"showers\"]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/tour/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Update tour",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"title\": \"<string>\",\r\n  \"price\": \"<string>\",\r\n  \"description\": \"<string>\",\r\n  \"photos\": [\r\n    \"<string>\",\r\n    \"<string>\"\r\n  ],\r\n  \"cancellationPeriodDays\": \"<number>\",\r\n  \"services\": [\"transportation\", \"meals\", \"guide\", \"night hike\"],\r\n  \"facilities\": [\"wifi\", \"restrooms\", \"parking\", \"showers\"]\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/tour/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"tour",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Upload photos for a tour",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "photos",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/tour/:id/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												":id",
												"upload"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Upload photos for a tour",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "photos",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/tour/:id/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"tour",
														":id",
														"upload"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "{user}",
							"item": [
								{
									"name": "Get all tourse registerations for user by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/tour/user/my-registers?page=1&limit=10&title=<string>&tag=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour",
												"user",
												"my-registers"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "title",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get all tourse registerations for user by ID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bearerToken}}/api/tour/my?page=1&limit=10&title=<string>&tag=<string>",
													"host": [
														"{{bearerToken}}"
													],
													"path": [
														"api",
														"tour",
														"my"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "title",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Get all tours",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/tour?page=1&limit=10&title=<string>&tag=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tour"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "title",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get all tours",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/tour",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"tour"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "Crowdfunding",
					"item": [
						{
							"name": "{admin}",
							"item": [
								{
									"name": "Get all projects for admin",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/admin/projects?page=1&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"admin",
												"projects"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get all projects for admin",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/admin/projects?page=1&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"admin",
														"projects"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get admin statistics",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/admin/statistics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"admin",
												"statistics"
											]
										}
									},
									"response": [
										{
											"name": "Get admin statistics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/admin/statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"admin",
														"statistics"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "{devidends}",
							"item": [
								{
									"name": "{seller}",
									"item": [
										{
											"name": "Calculate dividends for a project",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": 0,\r\n  \"totalProfit\": 0,\r\n  \"dividendType\": \"quarterly\", // quarterly, annual, project_completion, sale_proceeds, rental_income, bonus\r\n  \"periodStartDate\": \"2025-08-03\",\r\n  \"periodEndDate\": \"2025-08-03\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/dividends/calculate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"dividends",
														"calculate"
													]
												}
											},
											"response": [
												{
													"name": "Calculate dividends for a project",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"projectId\": 0,\r\n  \"totalProfit\": 0,\r\n  \"dividendType\": \"quarterly\",\r\n  \"periodStartDate\": \"2025-08-03\",\r\n  \"periodEndDate\": \"2025-08-03\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/crowdfunding/dividends/calculate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"crowdfunding",
																"dividends",
																"calculate"
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										},
										{
											"name": "Approve dividend distributions",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"distributionIds\": [\r\n        0\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/dividends/approve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"dividends",
														"approve"
													]
												}
											},
											"response": [
												{
													"name": "Approve dividend distributions",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"distributionIds\": [\r\n        0\r\n    ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/crowdfunding/dividends/approve",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"crowdfunding",
																"dividends",
																"approve"
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										},
										{
											"name": "Distribute approved dividends",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"distributionIds\": [\r\n    0\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/dividends/distribute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"dividends",
														"distribute"
													]
												}
											},
											"response": [
												{
													"name": "Distribute approved dividends",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"distributionIds\": [\r\n    0\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/crowdfunding/dividends/distribute",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"crowdfunding",
																"dividends",
																"distribute"
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "Get user dividends",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/my-dividends?page=1&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"my-dividends"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get user dividends",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/my-dividends?page=1&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"my-dividends"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "{Investments}",
							"item": [
								{
									"name": "{seller}",
									"item": [
										{
											"name": "Confirm an investment",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/investments/:id/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"investments",
														":id",
														"confirm"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Confirm an investment",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/crowdfunding/investments/:id/confirm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"crowdfunding",
																"investments",
																":id",
																"confirm"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "Make an investment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": 0,\r\n  \"sharesPurchased\": 0,\r\n  \"paymentMethod\": \"bank_transfer\", // bank_transfer, credit_card, digital_wallet, crypto, check\r\n  \"paymentReference\": \"string\" // until 100 char\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/investments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"investments"
											]
										}
									},
									"response": [
										{
											"name": "Make an investment",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": 0,\r\n  \"sharesPurchased\": 0,\r\n  \"paymentMethod\": \"bank_transfer\",\r\n  \"paymentReference\": \"string\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/investments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"investments"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get user investments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/my-investments?page=1&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"my-investments"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get user investments",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/my-investments?page=1&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"my-investments"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "{Marketplace}",
							"item": [
								{
									"name": "Get marketplace listings",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/marketplace",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"marketplace"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "{Portfolio}",
							"item": [
								{
									"name": "Get user portfolio",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/my-portfolio",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"my-portfolio"
											]
										}
									},
									"response": [
										{
											"name": "Get user portfolio",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/my-portfolio",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"my-portfolio"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Secondary Market",
							"item": [
								{
									"name": "Purchase shares from marketplace",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/shares/purchase/:transactionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"shares",
												"purchase",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Purchase shares from marketplace",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/shares/purchase/:transactionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"shares",
														"purchase",
														":transactionId"
													],
													"variable": [
														{
															"key": "transactionId",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get user share transactions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/shares/transactions?page=1&limit=10&type=all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"shares",
												"transactions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "type",
													"value": "all",
													"description": "Available values : all, selling, buying"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get user share transactions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/shares/transactions?page=1&limit=10&type=all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"shares",
														"transactions"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "type",
															"value": "all",
															"description": "Available values : all, selling, buying"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Create share transfer listing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": 0,\r\n  \"sharesQuantity\": 0,\r\n  \"pricePerShare\": 0,\r\n  \"isPublicListing\": true,\r\n  \"buyerId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/shares/transfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"shares",
												"transfer"
											]
										}
									},
									"response": [
										{
											"name": "Create share transfer listing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": 0,\r\n  \"sharesQuantity\": 0,\r\n  \"pricePerShare\": 0,\r\n  \"isPublicListing\": true,\r\n  \"buyerId\": 0\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crowdfunding/shares/transfer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crowdfunding",
														"shares",
														"transfer"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Create a new crowdfunding project",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"houseId\": 0,\r\n    \"title\": \"string\",\r\n    \"description\": \"string\",\r\n    \"projectType\": \"residential\", // residential, commercial, mixed_use, development\r\n    \"targetAmount\": 0, // 0 => 9999999999999.99\r\n    \"sharePrice\": 0, // 0 => 999.99\r\n    \"totalShares\": 0,\r\n    \"expectedAnnualReturn\": 0, // 0 => 999.99\r\n    \"fundingDeadline\": \"2025-08-03\",\r\n    \"minimumInvestmentShares\": 0, // 0 => 999.99\r\n    \"maximumInvestmentShares\": 0 // 0 => 999.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/crowdfunding/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"crowdfunding",
										"projects"
									]
								}
							},
							"response": [
								{
									"name": "Create a new crowdfunding project",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"houseId\": 0,\r\n    \"title\": \"string\",\r\n    \"description\": \"string\",\r\n    \"projectType\": \"residential\",\r\n    \"targetAmount\": 0,\r\n    \"sharePrice\": 0,\r\n    \"totalShares\": 0,\r\n    \"expectedAnnualReturn\": 0,\r\n    \"fundingDeadline\": \"2025-08-03\",\r\n    \"minimumInvestmentShares\": 0,\r\n    \"maximumInvestmentShares\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"projects"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get crowdfunding projects with filters",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/crowdfunding/projects?page=1&limit=10&status=<string>&projectType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"crowdfunding",
										"projects"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Available values : draft, active, funded, completed, cancelled"
										},
										{
											"key": "projectType",
											"value": "<string>",
											"description": "Available values : residential, commercial, mixed_use, development"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get crowdfunding projects with filters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/projects?page=1&limit=10&status=<string>&projectType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"projects"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "status",
													"value": "<string>",
													"description": "Available values : draft, active, funded, completed, cancelled"
												},
												{
													"key": "projectType",
													"value": "<string>",
													"description": "Available values : residential, commercial, mixed_use, development"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get project details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/crowdfunding/projects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"crowdfunding",
										"projects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get project details",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get project analytics",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/crowdfunding/projects/:id/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"crowdfunding",
										"projects",
										":id",
										"analytics"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get project analytics",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/projects/:id/analytics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"projects",
												":id",
												"analytics"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get project investors",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/crowdfunding/projects/:id/investors?page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"crowdfunding",
										"projects",
										":id",
										"investors"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get project investors",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/projects/:id/investors?page=1&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"projects",
												":id",
												"investors"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Active a Project",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/crowdfunding/projects/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"crowdfunding",
										"projects",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Active a Project",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/crowdfunding/projects/:id/active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crowdfunding",
												"projects",
												":id",
												"active"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "Brokerage",
					"item": [
						{
							"name": "Get all brokers list (Admin only)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/admin/brokers?page=1&limit=10&level=<string>&status=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"admin",
										"brokers"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "level",
											"value": "<string>",
											"description": "Available values : trainee, junior, senior, manager"
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Available values : active, inactive, suspended"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get all brokers list (Admin only)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/admin/brokers?page=1&limit=10&level=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"admin",
												"brokers"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "level",
													"value": "<string>",
													"description": "Available values : trainee, junior, senior, manager"
												},
												{
													"key": "status",
													"value": "<string>",
													"description": "Available values : active, inactive, suspended"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get overall brokerage system statistics (Admin only)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/admin/stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"admin",
										"stats"
									]
								}
							},
							"response": [
								{
									"name": "Get overall brokerage system statistics (Admin only)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/admin/stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"admin",
												"stats"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get broker's commissions list",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/commissions?page=1&limit=10&status=<string>&type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"commissions"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Available values : pending, approved, paid, cancelled"
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Available values : direct, level1, level2, bonus, penalty"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get broker's commissions list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/commissions?page=1&limit=10&status=<string>&type=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"commissions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "status",
													"value": "<string>",
													"description": "Available values : pending, approved, paid, cancelled"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Available values : direct, level1, level2, bonus, penalty"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Find broker by code",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/find/:brokerCode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"find",
										":brokerCode"
									],
									"variable": [
										{
											"key": "brokerCode",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Find broker by code",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/find/:brokerCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"find",
												":brokerCode"
											],
											"variable": [
												{
													"key": "brokerCode",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get broker hierarchy tree",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/hierarchy?depth=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"hierarchy"
									],
									"query": [
										{
											"key": "depth",
											"value": "3",
											"description": "Depth of hierarchy tree (1-5)"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get broker hierarchy tree",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/hierarchy?depth=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"hierarchy"
											],
											"query": [
												{
													"key": "depth",
													"value": "3",
													"description": "Depth of hierarchy tree (1-5)"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get broker information",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"info"
									]
								}
							},
							"response": [
								{
									"name": "Get broker information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"info"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get broker performance report",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/performance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"performance"
									]
								}
							},
							"response": [
								{
									"name": "Get broker performance report",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/performance",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"performance"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Register user as a broker",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"sponsorCode\": \"BR123ABC\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"register"
									]
								}
							},
							"response": [
								{
									"name": "Register user as a broker",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"sponsorCode\": \"BR123ABC\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"register"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Record a new sale",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"houseId\": 0,\r\n  \"buyerId\": 0,\r\n  \"sellerId\": 0,\r\n  \"saleAmount\": 2000000000, // 0 => 9999999999999.99\r\n  \"saleType\": \"direct_sale\", // direct_sale, rental, mortgage, lease\r\n  \"commissionPercentage\": 3.5, // 0 => 100\r\n  \"saleDetails\": {\r\n    \"paymentMethod\": \"string\",\r\n    \"installments\": 0,\r\n    \"downPayment\": 0,\r\n    \"monthlyPayment\": 0,\r\n    \"notes\": \"string\"\r\n  }, // isOptional\r\n  \"notes\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/sales",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"sales"
									]
								}
							},
							"response": [
								{
									"name": "Record a new sale",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"houseId\": 0,\r\n  \"buyerId\": 0,\r\n  \"sellerId\": 0,\r\n  \"saleAmount\": 2000000000,\r\n  \"saleType\": \"direct_sale\",\r\n  \"commissionPercentage\": 3.5,\r\n  \"saleDetails\": {},\r\n  \"notes\": \"string\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/sales",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"sales"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get broker's sales list",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/sales?page=1&limit=10&status=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"sales"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Available values : pending, completed, cancelled, refunded"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get broker's sales list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/sales?page=1&limit=10&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"sales"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "status",
													"value": "<string>",
													"description": "Available values : pending, completed, cancelled, refunded"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Complete a sale and pay commissions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/brokerage/sales/:saleId/complete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"brokerage",
										"sales",
										":saleId",
										"complete"
									],
									"variable": [
										{
											"key": "saleId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Complete a sale and pay commissions",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brokerage/sales/:saleId/complete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brokerage",
												"sales",
												":saleId",
												"complete"
											],
											"variable": [
												{
													"key": "saleId",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "Visit 3D",
					"item": [
						{
							"name": "{seller}",
							"item": [
								{
									"name": "Upload a visit 3D ( seller )",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "files",
													"description": "At least one panoramic image is required",
													"type": "file",
													"src": []
												},
												{
													"key": "house_id",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/visit-3ds/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-3ds",
												"upload"
											]
										}
									},
									"response": [
										{
											"name": "Upload a visit 3D ( seller )",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "files",
															"type": "file",
															"src": []
														},
														{
															"key": "title",
															"value": "",
															"type": "text"
														},
														{
															"key": "house_id",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/visit-3ds/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-3ds",
														"upload"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete a visit 3D by ID ( seller )",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/visit-3ds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-3ds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete a visit 3D by ID ( seller )",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/visit-3ds/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"visit-3ds",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Get a visit 3D by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/visit-3ds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"visit-3ds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get a visit 3D by ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/visit-3ds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-3ds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get a visist 3D by House ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/visit-3ds/house/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"visit-3ds",
										"house",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get a visist 3D by House ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/visit-3ds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"visit-3ds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://delta-project.liara.run"
		},
		{
			"key": "bearerToken",
			"value": ""
		}
	]
}